var searchIndex = new Map(JSON.parse('[\
["oxc_parser",{"doc":"Oxc Parser for JavaScript and TypeScript","t":"PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPSPPPPPPPPPPPPPPPPPPPPFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNONNNNNNNNN","n":["Abstract","Accessor","Amp","Amp2","Amp2Eq","AmpEq","Any","Arrow","As","Assert","Asserts","Async","At","Await","Bang","BigInt","Binary","Boolean","Break","Caret","CaretEq","Case","Catch","Class","Colon","Comma","Const","Constructor","Continue","Debugger","Decimal","Declare","Default","Delete","Do","Dot","Dot3","Else","Enum","Eof","Eq","Eq2","Eq3","Export","Extends","False","Finally","Float","For","From","Function","Get","Global","GtEq","HashbangComment","Hex","Ident","If","Implements","Import","In","Infer","Instanceof","Interface","Intrinsic","Is","JSXText","KeyOf","Kind","LAngle","LBrack","LCurly","LParen","Let","LtEq","MAX_LEN","Meta","Minus","Minus2","MinusEq","Module","Namespace","NegativeExponential","Neq","Neq2","Never","New","NoSubstitutionTemplate","Null","Number","Object","Octal","Of","Out","Override","Package","Parser","ParserReturn","Percent","PercentEq","Pipe","Pipe2","Pipe2Eq","PipeEq","Plus","Plus2","PlusEq","PositiveExponential","Private","PrivateIdentifier","Protected","Public","Question","Question2","Question2Eq","QuestionDot","RAngle","RBrack","RCurly","RParen","Readonly","RegExp","Require","Return","Satisfies","Semicolon","Set","ShiftLeft","ShiftLeftEq","ShiftRight","ShiftRight3","ShiftRight3Eq","ShiftRightEq","Skip","Slash","SlashEq","Star","Star2","Star2Eq","StarEq","Static","Str","String","Super","Switch","Symbol","Target","TemplateHead","TemplateMiddle","TemplateTail","This","Throw","Tilde","True","Try","Type","Typeof","Undefined","Undetermined","Unique","Unknown","Using","Var","Void","While","With","Yield","allow_return_outside_function","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_follow_type_arguments_in_expr","clone","clone_into","default","eq","equivalent","equivalent","errors","fmt","fmt","from","from","from","into","into","into","is_after_await_or_yield","is_after_let","is_all_keyword","is_assignment_operator","is_at_expression","is_binary_operator","is_binding_identifier","is_class_element_name_start","is_contextual_keyword","is_eof","is_future_reserved_keyword","is_identifier","is_identifier_name","is_identifier_reference","is_label_identifier","is_literal","is_literal_property_name","is_logical_operator","is_modifier_kind","is_number","is_reserved_keyword","is_strict_mode_contextual_keyword","is_template_start_of_tagged_template","is_unary_operator","is_update_operator","is_variable_declaration","match_keyword","matches_number_char","new","panicked","parse","parse_binding_pattern_from_position","parse_expression_from_position","parse_from_position","parse_identifier_from_position","parse_variable_declarator_from_position","preserve_parens","program","to_compact_string","to_owned","to_str","to_string","trivias","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"oxc_parser"],[242,"core::fmt"],[243,"core::fmt"],[244,"oxc_span::source_type"],[245,"oxc_ast::ast::js"],[246,"oxc_diagnostics"],[247,"oxc_ast::ast::js"],[248,"alloc::string"],[249,"core::result"],[250,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum length of source which can be parsed (in bytes). ~…","","","","","","","","","","","","","","","","","","","","","Recursive Descent Parser for ECMAScript and TypeScript","Return value of parser consisting of AST, errors and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String Type","","","","","","","","","","","","","","","","","","","","","","","","","","Allow return outside of function","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Check the succeeding token of a <code>let</code> keyword","Keywords and Reserved Words","","","","<code>BindingIdentifier</code>","Section 15.4 Method Definitions <code>ClassElementName</code>[Yield, …","","","","Identifier <code>IdentifierName</code> but not <code>ReservedWord</code>","<code>IdentifierName</code>","Identifiers <code>IdentifierReference</code>","<code>LabelIdentifier</code>","Section 13.2.4 Literals Literal : <code>NullLiteral</code> …","Section 13.2.6 Object Initializer <code>LiteralPropertyName</code> : …","","","","","","","","","","","","Create a new parser","","Main entry point","Errors","Errors","","Errors","Errors","Emit <code>ParenthesizedExpression</code> in AST.","","","","","","","","","","","","","","",""],"i":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,11,1,3,11,1,3,3,3,3,3,3,3,3,11,3,3,11,1,3,11,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,11,1,1,1,1,1,1,1,11,3,3,3,3,11,11,1,3,11,1,3,11,1,3],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}b}{ce{}{}}00000{fd}{ff}{{ce}h{}{}}{{}f}{{ff}d}{{ce}d{}{}}0`{{fj}l}0{cc{}}008887777777777777{{fdd}d}088888888888{nf}{{fA`}d}{{AbnAd}b}`{bAf}{{bAh}{{Al{Aj}}}}{{bAh}{{Al{An}}}}{{bAh}Af}{{bAh}{{Al{B`}}}}{{bAhBb}{{Al{Bd}}}}{{bd}b}`{cBf{}}{ce{}{}}{fn}{cBh{}}`{c{{Bj{e}}}{}{}}00000{cBl{}}00","c":[],"p":[[5,"Parser",0],[1,"bool"],[6,"Kind",0],[1,"unit"],[5,"Formatter",242],[8,"Result",242],[1,"str"],[1,"char"],[5,"Allocator",243],[5,"SourceType",244],[5,"ParserReturn",0],[1,"u32"],[5,"BindingPattern",245],[8,"Result",246],[6,"Expression",245],[5,"IdentifierReference",245],[6,"VariableDeclarationKind",245],[5,"VariableDeclarator",245],[5,"CompactString",247],[5,"String",248],[6,"Result",249],[5,"TypeId",250]],"b":[[182,"impl-Debug-for-Kind"],[183,"impl-Display-for-Kind"]]}],\
["ssc",{"doc":"SSC","t":"CCCCCCFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGGPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFIKKNNONNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPPPFPGGFPFPGFGPPPPPFPFFPFPGFFGGFPPGPFPGPGFPPFPFGPPFPPPPFPPFPFPGPPPPGPPPPFPPFPFFPGFFFGPFPFPFPFPFFFPFGFPFPFPFPFFPFPFFPFPFPPGPFPPFPFPGFPOONNNNNOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOOOOOONNOOOOONNNOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFKNNNNNNNNNNOONNNNNNNNNNNNNNOONNNNNNNNNNPIFIPIPFFFFPFFIIPNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPGPPPPSPPFFPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNONNNNNNNNNNNONONNNNONNNNNNNNNSFFKPPGGPGSPFFPPPSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["allocator","ast","codegen","diagnostics","parser","span","Allocator","Box","String","Vec","add","add_assign","as_bytes","as_mut_str","as_mut_vec","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","capacity","clear","clone","clone_from","clone_into","cmp","dangling","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","from","from","from","from","from","from_iter_in","from_iter_in","from_iter_in","from_raw_parts_in","from_str_in","from_utf16_in","from_utf8","from_utf8_lossy_in","from_utf8_unchecked","gen","gen","gen","gen","gen","gen_expr","hash","hash","hash","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert_str","into","into","into","into","into_bump_str","into_bytes","into_iter","into_iter","is_empty","len","new_in","new_in","new_in","partial_cmp","pop","push","push_str","remove","replace_range","reserve","reserve_exact","retain","serialize","serialize","shrink_to_fit","split_off","to_compact_string","to_owned","to_string","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unbox","with_capacity_in","with_capacity_in","write_char","write_str","AstBuilder","AstKind","AstType","AwaitBlock","AwaitBlock","Comment","Component","Component","ConstTag","ConstTag","DebugTag","DebugTag","EachBlock","EachBlock","ExpressionTag","ExpressionTag","HtmlTag","HtmlTag","IfBlock","IfBlock","KeyBlock","KeyBlock","RegularElement","RegularElement","RenderTag","RenderTag","Root","Root","SlotElement","SlotElement","SnippetBlock","SnippetBlock","SvelteBody","SvelteBody","SvelteComponent","SvelteComponent","SvelteDocument","SvelteDocument","SvelteElement","SvelteElement","SvelteFragment","SvelteFragment","SvelteHead","SvelteHead","SvelteOptionsRaw","SvelteOptionsRaw","SvelteSelf","SvelteSelf","SvelteWindow","SvelteWindow","Text","Text","TitleElement","TitleElement","Trivias","TriviasMap","Visit","VisitMut","alloc","alloc","allocator","animate_directive","as_out","as_out","as_out","ast","attribute","await_block","bind_directive","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_directive","clone","clone","clone","clone_into","clone_into","clone_into","comments","comments_range","component","const_tag","copy","debug_name","debug_tag","default","each_block","end","enter_node","enter_node","expression_tag","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","has_comments_between","html_tag","if_block","into","into","into","into","into","irregular_whitespaces","key_block","leave_node","leave_node","let_directive","new","new","new","new_atom","new_str","new_vec","new_vec_from_iter","new_vec_single","new_vec_with_capacity","on_directive","regular_element","render_tag","root","script","slot_element","snippet_block","span","spread_attribute","style","style_directive","svelte_body","svelte_component","svelte_document","svelte_element","svelte_fragment","svelte_head","svelte_options","svelte_self","svelte_window","text","title_element","to_owned","to_owned","to_owned","transition_directive","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_directive","visit","visit_await_block","visit_await_block","visit_block","visit_block","visit_component","visit_component","visit_const_tag","visit_const_tag","visit_debug_tag","visit_debug_tag","visit_each_block","visit_each_block","visit_element","visit_element","visit_expression_tag","visit_expression_tag","visit_fragment","visit_fragment","visit_fragment_node","visit_fragment_node","visit_html_tag","visit_html_tag","visit_if_block","visit_if_block","visit_key_block","visit_key_block","visit_regular_element","visit_regular_element","visit_render_tag","visit_render_tag","visit_root","visit_root","visit_slot_element","visit_slot_element","visit_snippet_block","visit_snippet_block","visit_svelte_body","visit_svelte_body","visit_svelte_component","visit_svelte_component","visit_svelte_document","visit_svelte_document","visit_svelte_element","visit_svelte_element","visit_svelte_fragment","visit_svelte_fragment","visit_svelte_head","visit_svelte_head","visit_svelte_options_raw","visit_svelte_options_raw","visit_svelte_self","visit_svelte_self","visit_svelte_window","visit_svelte_window","visit_tag","visit_tag","visit_text","visit_text","visit_title_element","visit_title_element","AnimateDirective","AnimateDirective","Array","ArrayExpression","ArrowFunction","Attribute","Attribute","AttributeSequenceValue","AttributeValue","AwaitBlock","AwaitBlock","BindDirective","BindDirective","BindDirectiveExpression","BindDirectiveMetadata","Block","Block","Bool","Boolean","Call","Chain","ClassDirective","ClassDirective","ClassDirectiveMetadata","Component","Component","ConstTag","ConstTag","CustomElementExtend","CustomElementOptions","CustomElementProp","CustomElementPropType","CustomElementShadow","DebugTag","DebugTag","Default","DirectiveAttribute","DirectiveAttribute","EachBlock","EachBlock","Element","Element","ElementAttribute","ExpressionTag","ExpressionTag","ExpressionTag","ExpressionTagMetadata","Foreign","Fragment","FragmentNode","Global","Html","HtmlTag","HtmlTag","Identifier","Identifier","Identifier","IfBlock","IfBlock","Important","KeyBlock","KeyBlock","LetDirective","LetDirective","LetDirectiveExpression","Local","MathMl","MemberExpression","Module","Namespace","None","Number","Object","ObjectExpression","OnDirective","OnDirective","Open","RegularElement","RegularElement","RegularElementMetadata","RenderTag","RenderTag","RenderTagExpression","Root","RootMetadata","Script","ScriptContext","Sequence","SlotElement","SlotElement","SnippetBlock","SnippetBlock","SpreadAttribute","SpreadAttribute","SpreadAttributeMetadata","String","Style","StyleContent","StyleDirective","StyleDirective","StyleDirectiveMetadata","StyleDirectiveModifier","SvelteBody","SvelteBody","SvelteComponent","SvelteComponent","SvelteDocument","SvelteDocument","SvelteElement","SvelteElement","SvelteElementMetadata","SvelteFragment","SvelteFragment","SvelteHead","SvelteHead","SvelteOptions","SvelteOptionsRaw","SvelteOptionsRaw","SvelteSelf","SvelteSelf","SvelteWindow","SvelteWindow","Svg","Tag","Tag","Text","Text","Text","TitleElement","TitleElement","TransitionDirective","TransitionDirective","TransitionDirectiveModifier","UseDirective","UseDirective","accessors","alternate","as_attribute","as_directive_attribute","as_out","as_spread_attribute","attribute","attribute","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","binding_group_name","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catch","clone","clone_into","consequent","contains_call_expression","contains_call_expression","content","context","context","css","custom_element","data","declaration","default","directive_attribute","dynamic","dynamic","dynamic","dynamic","elseif","eq","equivalent","equivalent","error","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","extend","fallback","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","gen","has_spread","identifiers","immutable","index","instance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intro","key","metadata","metadata","metadata","metadata","metadata","metadata","metadata","modifiers","modifiers","modifiers","module","name","name","name","name","name","name","name","name","name","name","name","namespace","nodes","options","outro","parameters","parent_each_blocks","pending","preserve_whitespace","program","props","raw","reflect","runes","scoped","scoped","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shadow","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spread_attribute","styles","stylesheet","svg","svg","tag","test","then","to_owned","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","Visit","VisitMut","alloc","enter_node","enter_node","leave_node","leave_node","visit_await_block","visit_await_block","visit_block","visit_block","visit_component","visit_component","visit_const_tag","visit_const_tag","visit_debug_tag","visit_debug_tag","visit_each_block","visit_each_block","visit_element","visit_element","visit_expression_tag","visit_expression_tag","visit_fragment","visit_fragment","visit_fragment_node","visit_fragment_node","visit_html_tag","visit_html_tag","visit_if_block","visit_if_block","visit_key_block","visit_key_block","visit_regular_element","visit_regular_element","visit_render_tag","visit_render_tag","visit_root","visit_root","visit_slot_element","visit_slot_element","visit_snippet_block","visit_snippet_block","visit_svelte_body","visit_svelte_body","visit_svelte_component","visit_svelte_component","visit_svelte_document","visit_svelte_document","visit_svelte_element","visit_svelte_element","visit_svelte_fragment","visit_svelte_fragment","visit_svelte_head","visit_svelte_head","visit_svelte_options_raw","visit_svelte_options_raw","visit_svelte_self","visit_svelte_self","visit_svelte_window","visit_svelte_window","visit_tag","visit_tag","visit_text","visit_text","visit_title_element","visit_title_element","walk","walk_mut","walk_await_block","walk_block","walk_component","walk_const_tag","walk_debug_tag","walk_each_block","walk_element","walk_expression_tag","walk_fragment","walk_fragment_node","walk_html_tag","walk_if_block","walk_key_block","walk_regular_element","walk_render_tag","walk_root","walk_slot_element","walk_snippet_block","walk_svelte_body","walk_svelte_component","walk_svelte_document","walk_svelte_element","walk_svelte_fragment","walk_svelte_head","walk_svelte_options_raw","walk_svelte_self","walk_svelte_window","walk_tag","walk_text","walk_title_element","walk_await_block_mut","walk_block_mut","walk_component_mut","walk_const_tag_mut","walk_debug_tag_mut","walk_each_block_mut","walk_element_mut","walk_expression_tag_mut","walk_fragment_mut","walk_fragment_node_mut","walk_html_tag_mut","walk_if_block_mut","walk_key_block_mut","walk_regular_element_mut","walk_render_tag_mut","walk_root_mut","walk_slot_element_mut","walk_snippet_block_mut","walk_svelte_body_mut","walk_svelte_component_mut","walk_svelte_document_mut","walk_svelte_element_mut","walk_svelte_fragment_mut","walk_svelte_head_mut","walk_svelte_options_raw_mut","walk_svelte_self_mut","walk_svelte_window_mut","walk_tag_mut","walk_text_mut","walk_title_element_mut","Codegen","CodegenOptions","CodegenReturn","Gen","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","enable_source_map","enable_typescript","fmt","from","from","from","gen","into","into","into","into_source_text","new","print","print_hard_space","print_str","print_str_with_indention","source_map","source_text","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Advice","DiagnosticSender","DiagnosticService","DiagnosticTuple","Err","Error","Error","GraphicalReportHandler","GraphicalTheme","LabeledSpan","NamedSource","Ok","OxcDiagnostic","OxcDiagnosticInner","Result","Severity","Warning","and_label","and_labels","ascii","at","at_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","characters","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","debug","default","default","default","deref","eq","eq","equivalent","equivalent","equivalent","equivalent","error","errors_count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","help","help","inner","inner","into","into","into","into","into","into","into","is_empty","label","labels","labels","len","max_warnings_exceeded","message","name","new","new","new","new_primary_with_span","new_with_span","none","offset","partial_cmp","primary","read_span","render_report","run","sender","set_checkstyle_reporter","set_github_reporter","set_json_reporter","set_label","set_unix_reporter","severity","severity","styles","tab_width","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","unicode","unicode_nocolor","warn","warnings_count","with_break_words","with_cause_chain","with_context_lines","with_footer","with_help","with_label","with_labels","with_language","with_link_display_text","with_links","with_max_warnings","with_quiet","with_severity","with_silent","with_source_code","with_theme","with_urls","with_width","with_word_separator","with_word_splitter","with_wrap_lines","without_cause_chain","wrap_diagnostics","Amp","As","At","Await","Backtick","Bang","Caret","Catch","Colon","Comma","Const","Debug","Dot","Dot3","Each","Else","Eof","Eq","Hash","Html","Ident","If","Key","Kind","LAngle","LBrack","LCurly","LParen","MAX_LEN","Minus","Number","Parser","ParserReturn","Percent","Pipe","Plus","Question","RAngle","RBrack","RCurly","RParen","Render","Script","Semicolon","Skip","Slash","Snippet","Star","Str","Style","Text","Then","Tilde","Undetermined","as_out","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","errors","fmt","fmt","from","from","from","into","into","into","is_eof","match_keyword","new","panicked","parse","root","to_compact_string","to_owned","to_str","to_string","trivias","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ATOM_MAX_INLINE_LEN","Atom","CompactStr","GetSpan","JavaScript","Jsx","Language","LanguageVariant","Module","ModuleKind","SPAN","Script","SourceType","Span","Standard","TypeScript","TypeScriptDefinition","VALID_EXTENSIONS","always_strict","as_out","as_out","as_out","as_out","as_out","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","deref","deref","end","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_path","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into_compact_str","into_string","into_string","is_empty","is_javascript","is_jsx","is_module","is_script","is_strict","is_typescript","is_typescript_definition","len","merge","module_kind","new","new","new_const","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","source_text","span","start","to_compact_str","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_always_strict","with_jsx","with_module","with_script","with_typescript","with_typescript_definition"],"q":[[0,"ssc"],[6,"ssc::allocator"],[152,"ssc::ast"],[386,"ssc::ast::ast"],[1367,"ssc::ast::visit"],[1436,"ssc::ast::visit::walk"],[1466,"ssc::ast::visit::walk_mut"],[1496,"ssc::codegen"],[1538,"ssc::diagnostics"],[1715,"ssc::parser"],[1811,"ssc::span"],[1999,"bumpalo::collections::vec"],[2000,"bumpalo"],[2001,"core::cmp"],[2002,"core::marker"],[2003,"allocator_api2::stable::vec"],[2004,"bumpalo::collections::string"],[2005,"core::ops::range"],[2006,"core::cmp"],[2007,"alloc::string"],[2008,"core::iter::traits::collect"],[2009,"core::fmt"],[2010,"core::fmt"],[2011,"core::fmt"],[2012,"ssc_css_codegen::gen"],[2013,"oxc_codegen"],[2014,"oxc_codegen::context"],[2015,"oxc_codegen::gen"],[2016,"oxc_ast::ast::ts"],[2017,"oxc_syntax::precedence"],[2018,"oxc_codegen::gen"],[2019,"core::hash"],[2020,"core::ops::function"],[2021,"serde::ser"],[2022,"serde::ser"],[2023,"core::any"],[2024,"oxc_ast::ast::js"],[2025,"outref"],[2026,"oxc_ast::ast::js"],[2027,"alloc::collections::btree::map"],[2028,"oxc_ast::ast::js"],[2029,"alloc::collections::btree::map"],[2030,"core::convert"],[2031,"miette::protocol"],[2032,"core::clone"],[2033,"miette::protocol"],[2034,"core::convert"],[2035,"core::fmt"],[2036,"miette::eyreish"],[2037,"std::sync::mpsc"],[2038,"miette::protocol"],[2039,"textwrap::word_splitters"],[2040,"std::path"]],"d":["","","","","","","","A Box without Drop. This is used for over coming …","A UTF-8 encoded, growable string.","Bumpalo Vec","","","Returns a byte slice of this <code>String</code>’s contents.","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","","","Extracts a string slice containing the entire <code>String</code>.","","","","","","","","","","","Returns a shared reference to the allocator backing this …","Returns this <code>String</code>’s capacity, in bytes.","Truncates this <code>String</code>, removing all contents.","","","","","Create a fake <code>Box</code> with a dangling pointer.","","","","","","","","","","Creates a draining iterator that removes the specified …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Construct a new <code>String&lt;&#39;bump&gt;</code> from an iterator of <code>char</code>s.","Creates a new <code>String</code> from a length, capacity, and pointer.","Construct a new <code>String&lt;&#39;bump&gt;</code> from a string slice.","Decode a UTF-16 encoded slice <code>v</code> into a <code>String</code>, returning …","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","","","","","","","","","","","","","","","","","","","","","","","","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this <code>String&lt;&#39;bump&gt;</code> into a <code>&amp;&#39;bump str</code>. This is …","Converts a <code>String</code> into a byte vector.","","","Returns <code>true</code> if this <code>String</code> has a length of zero.","Returns the length of this <code>String</code>, in bytes.","","","Creates a new empty <code>String</code>.","","Removes the last character from the string buffer and …","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Removes the specified range in the string, and replaces it …","Ensures that this <code>String</code>’s capacity is at least …","Ensures that this <code>String</code>’s capacity is <code>additional</code> bytes …","Retains only the characters specified by the predicate.","","","Shrinks the capacity of this <code>String</code> to match its length.","Splits the string into two at the given index.","","","","Shortens this <code>String</code> to the specified length.","","","","","","","","","","","","","","","Creates a new empty <code>String</code> with a particular capacity.","","","","Untyped AST Node Kind","","","","Comment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntax tree traversal","Syntax tree traversal to mutate an exclusive borrow of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the AST kind name with minimal details. Particularly …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeyntax tree traversal","Syntax tree traversal to mutate an exclusive borrow of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass in the filename to enable source map support.","Enable TypeScript code generation.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Push a single character into the buffer","","Push a string into the buffer","","","","","","","","","","","","","","Just some help. Here’s how you could be doing it better.","","","","Contains the error value","","Critical failure. The program cannot continue. This is the …","","Theme used by <code>GraphicalReportHandler</code> to render fancy …","A labeled <code>SourceSpan</code>.","Utility struct for when you have a regular <code>SourceCode</code> type …","Contains the success value","","","","","Warning. Please take note.","","","ASCII-art-based graphical drawing, with ANSI styling.","Makes a new label at specified span","Makes a new label that points at a specific offset.","","","","","","","","","","","","","","","Characters to be used for drawing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns a reference the inner <code>SourceCode</code> type for this …","Returns a reference to the inner <code>SourceSpan</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if this <code>LabeledSpan</code> is empty.","Gets the (optional) label string for this <code>LabeledSpan</code>.","","","Returns the number of bytes this <code>LabeledSpan</code> spans.","","","Gets the name of this <code>NamedSource</code>.","Create a new <code>GraphicalReportHandler</code> with the default …","Create a new <code>NamedSource</code> using a regular <code>SourceCode</code> and …","Makes a new labeled span.","Makes a new labeled primary span using an existing span.","Makes a new labeled span using an existing span.","A “basic” graphical theme that skips colors and …","Returns the 0-based starting byte offset.","","True if this <code>LabeledSpan</code> is a primary span.","","Render a <code>Diagnostic</code>. This function is mostly internal and …","Panics","","","","","Change the text of the label","","","","Styles to be used for painting.","Set the displayed tab width in spaces.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Makes a new label without text, that underlines a specific …","Graphical theme that draws using both ansi colors and …","Graphical theme that draws in monochrome, while still …","","","Enables or disables breaking of words during wrapping.","Include the cause chain of the top-level error in the …","Sets the number of lines of context to show around each …","Sets the ‘global’ footer for this handler.","","","","Sets the <code>language</code> for this source code.","Sets the display text for links. Miette displays <code>(link)</code> if …","Whether to enable error code linkification using …","","","","","","Set a theme for this handler.","Whether to include <code>Diagnostic::url()</code> in the output.","Sets the width to wrap the report at.","Sets the word separator to use when wrapping.","Sets the word splitter to usewhen wrapping.","Enables or disables wrapping of lines to fit the width.","Do not include the cause chain of the top-level error in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum length of source which can be parsed (in bytes). ~…","","","Recursive Descent Parser","Return value of parser consisting of AST, errors and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new parser","","Main entry point","","","","","","","","","","","","","","","","Maximum length for inline string, which can be created …","An inlinable string for oxc_allocator.","Lifetimeless version of <code>Atom&lt;&#39;_&gt;</code> which owns its own string …","Get the span for an AST node","","","JavaScript or TypeScript","JSX for JavaScript and TypeScript","","Script or Module","An Empty span useful for creating AST nodes.","","Source Type for JavaScript vs TypeScript / Script vs …","Newtype for working with text ranges","","","","Valid file extensions","","","","","","","","","","Get string content as a <code>&amp;str</code> slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts file path to <code>SourceType</code> returns …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert a <code>CompactStr</code> into a <code>String</code>.","Check if a <code>CompactStr</code> is empty (0 length).","","","","","","","","Get length of <code>CompactStr</code>.","","","Create a new <code>CompactStr</code>.","","Create a <code>CompactStr</code> at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,10,13,11,1,1,10,13,11,1,1,1,1,1,1,1,1,1,10,11,10,13,11,1,10,13,11,1,1,13,1,1,1,1,1,13,13,1,1,1,1,1,1,1,1,10,13,1,1,10,13,11,11,1,13,1,1,1,1,1,1,1,1,10,10,10,13,13,10,10,13,1,13,13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,13,11,1,1,1,13,13,1,1,10,13,1,1,1,1,1,1,1,1,1,1,10,13,1,1,1,1,1,1,10,13,11,1,10,13,11,1,10,13,11,1,10,13,1,1,1,0,0,0,70,71,0,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,0,0,0,0,57,58,57,57,70,71,72,0,57,57,57,57,70,71,72,73,57,70,71,72,73,57,70,71,72,70,71,72,73,73,57,57,57,71,57,73,57,72,58,85,57,70,71,72,73,57,57,70,71,72,73,73,57,57,57,70,71,72,73,73,57,58,85,57,57,72,73,57,57,57,57,57,57,57,57,57,57,57,57,57,71,57,57,57,57,57,57,57,57,57,57,57,57,57,57,70,71,72,57,57,70,71,72,73,57,70,71,72,73,57,70,71,72,73,57,0,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,0,62,131,92,132,0,77,0,0,0,107,0,62,0,0,0,87,64,131,94,94,0,62,0,0,78,0,120,0,0,0,0,0,0,120,99,0,77,0,107,0,87,0,0,120,39,0,122,0,0,106,122,0,120,132,69,92,0,107,104,0,107,0,62,0,106,122,69,99,0,129,131,131,92,0,62,129,0,78,0,0,120,0,0,0,0,0,64,0,78,0,107,0,77,0,131,0,0,0,62,0,0,0,78,0,78,0,78,0,78,0,0,78,0,78,0,0,78,0,78,0,78,122,0,87,0,87,39,0,78,0,62,0,0,62,127,89,77,77,122,77,77,130,108,121,110,109,111,112,113,114,115,116,117,118,119,96,127,97,137,84,101,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,68,122,122,89,123,134,96,84,97,98,127,105,80,122,77,123,134,139,143,89,99,99,99,68,86,88,95,112,114,84,68,91,101,102,135,136,138,140,141,144,145,128,84,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,98,108,121,110,109,111,112,113,114,115,116,117,118,119,91,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,98,67,105,120,86,88,80,82,95,78,77,108,121,110,109,111,112,113,114,115,116,117,118,119,107,84,89,68,91,101,96,97,65,102,62,135,136,138,140,141,142,144,145,124,82,127,84,98,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,144,84,98,86,109,114,102,138,142,141,142,144,98,108,109,65,135,136,138,140,141,142,144,145,127,67,98,144,101,137,68,127,97,128,105,130,127,124,125,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,128,87,120,78,77,107,39,62,98,105,86,88,80,82,95,108,121,110,109,111,112,113,114,115,116,117,118,119,84,89,68,91,101,96,126,127,97,65,102,135,136,138,140,141,142,144,145,77,126,96,124,125,128,89,68,122,67,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,133,130,98,67,87,105,120,86,123,88,80,82,95,94,78,77,108,121,110,109,124,111,112,113,114,125,115,116,117,118,119,107,84,89,68,91,101,96,126,127,122,128,129,130,131,132,97,99,133,65,64,39,102,134,62,135,136,69,137,138,139,140,92,141,142,104,143,144,106,145,68,65,142,0,0,58,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,58,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,31,147,146,31,147,31,147,147,147,147,147,147,146,31,147,32,146,31,147,31,31,31,31,31,31,146,146,147,146,31,147,146,31,147,146,31,147,188,0,0,0,189,0,188,0,0,0,0,189,0,0,0,0,188,148,148,151,149,149,160,153,151,148,154,155,149,160,153,151,148,154,155,149,151,153,151,148,154,155,149,153,151,148,154,155,149,155,153,160,153,151,148,155,149,155,155,149,149,148,160,153,151,148,148,154,155,149,160,153,151,148,154,155,149,149,155,148,154,155,149,160,153,151,148,154,155,149,149,149,148,154,149,160,154,155,153,155,149,149,149,151,149,155,149,155,153,160,160,160,160,160,149,160,148,154,151,153,148,153,151,148,154,155,149,148,160,153,151,148,154,155,149,160,153,151,148,154,155,149,160,153,151,148,154,155,149,149,151,151,148,160,153,153,153,153,148,148,148,155,153,153,160,160,148,160,148,153,153,153,153,153,153,153,160,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,0,178,178,0,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,180,179,178,180,179,178,178,178,178,178,178,178,180,178,178,180,179,178,180,179,178,178,178,179,180,179,180,178,178,178,178,180,180,179,178,180,179,178,180,179,178,0,0,0,0,183,185,0,0,184,0,0,184,0,0,185,183,183,0,181,181,183,184,185,59,60,182,60,182,60,60,182,182,181,183,184,185,59,60,182,181,183,184,185,59,60,182,181,183,184,185,59,60,182,181,183,184,185,59,59,181,59,60,182,59,60,60,182,181,183,184,185,59,60,60,182,182,181,181,183,183,184,184,185,185,59,59,60,60,182,182,181,183,184,185,59,60,60,182,182,182,181,183,184,185,59,181,60,182,181,183,184,185,59,60,182,181,183,184,185,59,60,60,182,182,181,181,181,181,181,181,181,182,59,181,182,59,182,59,60,182,181,183,184,185,59,59,59,187,59,60,60,182,60,182,181,183,184,185,59,60,182,60,182,181,183,184,185,59,60,182,181,183,184,185,59,60,182,181,183,184,185,59,181,181,181,181,181,181],"f":"``````````{{bd}b}{{bd}f}{b{{j{h}}}}{bd}{b{{l{h}}}}211{ce{}{}}000200002{bn}{bA`}{bf}{bb}{{bb}f}{{ce}f{}{}}{{bb}Ab}{{}{{Ad{c}}}{}}{{}Af}{{{Ad{c}}}cAh}{{{Aj{c}}}{}{}}{Af}>2{{{Aj{c}}}{{Al{cn}}}{}}1?{{bc}An{{B`{A`}}}}{{{Aj{c}}{Aj{c}}}BbBd}{{b{Bf{d}}}Bb}{{bd}Bb}{{bb}Bb}1{{bBh}Bb}{{ce}Bb{}{}}000{{bc}f{{Bn{}{{Bj{Bl}}}}}}{{bc}f{{Bn{}{{Bj{d}}}}}}{{bc}f{{Bn{}{{Bj{b}}}}}}{{bc}f{{Bn{}{{Bj{Bh}}}}}}3{{bc}f{{Bn{}{{Bj{{Bf{d}}}}}}}}{{{Ad{c}}C`}{{Cd{fCb}}}{CfAh}}{{{Aj{c}}C`}{{Cd{fCb}}}Cf}{{bC`}{{Cd{fCb}}}}0{cc{}}0{nAf}11{{eAf}{{Aj{c}}}{}{{Bn{}{{Bj{c}}}}}}{cb{{Bn{}{{Bj{Bl}}}}}}{{cn}b{{Bn{}{{Bj{Bl}}}}}}{{hA`A`n}b}{{dn}b}{{{j{Ch}}n}{{Cd{bCj}}}}{{{l{h}}}{{Cd{bCl}}}}{{{j{h}}n}b}{{{l{h}}}b}{{{Ad{c}}Cn}fD`}{{{Ad{c}}Db}fDd}{{{Ad{c}}DfDh}fDj}{{{Aj{Dl}}DfDh}f}{{{Aj{Dn}}Cn}f}{{{Ad{c}}DfE`Dh}fEb}{{{Ad{c}}e}fEdEf}{{{Aj{c}}e}fEdEf}{{bc}fEf}{{{Aj{c}}A`}{}{}}0{{bEh}d}{{b{Ej{A`}}}d}{{b{El{A`}}}d}{{b{En{A`}}}d}{{b{F`{A`}}}d}{{b{Fb{A`}}}d}513240{{bA`Bl}f}{{bA`d}f}{ce{}{}}000{bd}{b{{l{h}}}}{{{Aj{c}}}{}{}}0{bBb}{bA`}{{cAf}{{Ad{c}}}{}}{Af{{Aj{c}}}{}}{nb}{{bb}{{Fd{Ab}}}}{b{{Fd{Bl}}}}{{bBl}f}{{bd}f}{{bA`}Bl}{{bcd}f{{B`{A`}}}}{{bA`}f}0{{bc}f{{Fh{Bl}{{Ff{Bb}}}}}}{{{Ad{c}}e}CdFjFl}{{{Aj{c}}e}CdFjFl}{bf}{{bA`}b}{cFn{}}{ce{}{}}{cBh{}}8{c{{Cd{e}}}{}{}}0000000{cG`{}}000{{{Ad{c}}}c{}}{{A`Af}{{Aj{c}}}{}}{{A`n}b}{{bBl}{{Cd{fCb}}}}{{bd}{{Cd{fCb}}}}``````````````````````````````````````````````````````````{{Gbc}{{Ad{c}}}{}}{{Gdc}c{}}`{{GbGfGh{Fd{Gj}}}Gl}{c{{Gn{e}}}{}{}}00`{{GbGfGhH`}Hb}{{GbGfGj{Fd{Hd}}{Fd{Hd}}{Fd{Hf}}{Fd{Hf}}{Fd{Hf}}}Hh}{{GbGfGhHj}Gl}??????????{{GbGfGhGj}Gl}{HlHl}{HnHn}{I`I`}{{ce}f{}{}}00{Ib{{`{{Id{}{{Bj{Gf}}}}}}}}{{Ibc}{{Ih{IfI`}}}{{B`{If}}}}{{GbGfGh{Aj{Ij}}Hf}Il}{{GbGfIn}J`}{{Gbc}c{}}{Hn{{Bf{d}}}}{{GbGf{Aj{Jb}}}Jd}{{}Ib}{{GbGfGjHdHf{Fd{Hf}}{Fd{Jf}}{Fd{Gj}}}Jh}`{{GdHn}f}{{JjHl}f}{{GbGfGj}Jl}{{HlC`}{{Cd{fCb}}}}{{HnC`}{{Cd{fCb}}}}{{I`C`}{{Cd{fCb}}}}{{IbC`}{{Cd{fCb}}}}{{Gb{Aj{Jn}}Bb}Hf}{cc{}}0000{{IbGf}Bb}{{GbGfGj}K`}{{GbGfBbGjHf{Fd{Hf}}}Kb}{ce{}{}}0000{Ib{{Kd{Gf}}}}{{GbGfGjHf}Kf}>={{GbGfGh{Fd{Kh}}}Gl}{AfGb}{IfI`}{{{Kj{IfI`}}{Kd{Gf}}}Ib}{{Gbd}Gh}{{Gbd}d}{Gb{{Aj{c}}}{}}{{Gbe}{{Aj{c}}}{}{{Bn{}{{Bj{c}}}}}}{{Gbc}{{Aj{c}}}{}}{{GbA`}{{Aj{c}}}{}}{{GbGfGh{Fd{Gj}}{Aj{Gh}}}Gl}{{GbGfGh{Aj{Ij}}Hf}Il}{{GbGfKl}Kn}{{GbGfHf{Fd{L`}}{Fd{Lb}}{Fd{Lb}}Bb}Ld}{{GbGfLfLh{Aj{Hb}}}Lb}{{GbGf{Aj{Ij}}Hf}Il}{{GbGfJf{Aj{Hd}}Hf}Lj}{HnGf}{{GbGfGj}Ll}{{GbGfLn{Aj{Hb}}GfGh}L`}{{GbGfGhH`{Aj{M`}}}Gl}5{{GbGf{Aj{Ij}}HfGj}Il}6066666{{GbGfGh}Mb}7{ce{}{}}00{{GbGfGh{Fd{Gj}}{Aj{Md}}BbBb}Gl}{c{{Cd{e}}}{}{}}000000000{cG`{}}0000{{GbGfGh{Fd{Gj}}}Gl}`{{GdHh}f}{{JjHh}f}{{GdMf}f}{{JjMf}f}{{GdMh}f}{{JjMh}f}{{GdJ`}f}{{JjJ`}f}{{GdJd}f}{{JjJd}f}{{GdJh}f}{{JjJh}f}{{GdIl}f}{{JjIl}f}{{GdJl}f}{{JjJl}f}{{GdHf}f}{{JjHf}f}{{GdJn}f}{{JjJn}f}{{GdK`}f}{{JjK`}f}{{GdKb}f}{{JjKb}f}{{GdKf}f}{{JjKf}f}{{GdMj}f}{{JjMj}f}{{GdKn}f}{{JjKn}f}{{GdLd}f}{{JjLd}f}{{GdMl}f}{{JjMl}f}{{GdLj}f}{{JjLj}f}{{GdMn}f}{{JjMn}f}{{GdN`}f}{{JjN`}f}{{GdNb}f}{{JjNb}f}{{GdNd}f}{{JjNd}f}{{GdNf}f}{{JjNf}f}{{GdNh}f}{{JjNh}f}{{GdNj}f}{{JjNj}f}{{GdNl}f}{{JjNl}f}{{GdNn}f}{{JjNn}f}{{GdO`}f}{{JjO`}f}{{GdMb}f}{{JjMb}f}{{GdOb}f}{{JjOb}f}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{Ij{{Fd{Hb}}}}{Ij{{Fd{Gl}}}}{c{{Gn{e}}}{}{}}{Ij{{Fd{Ll}}}}3````````````````````{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{OdOd}{{ce}f{}{}}``````````{{}Od}6`````{{LfLf}Bb}{{ce}Bb{}{}}0````````````````````{{LdC`}{{Cd{fCb}}}}{{HfC`}{{Cd{fCb}}}}{{JnC`}{{Cd{fCb}}}}{{MbC`}{{Cd{fCb}}}}{{O`C`}{{Cd{fCb}}}}{{JlC`}{{Cd{fCb}}}}{{OfC`}{{Cd{fCb}}}}{{K`C`}{{Cd{fCb}}}}{{J`C`}{{Cd{fCb}}}}{{JdC`}{{Cd{fCb}}}}{{KnC`}{{Cd{fCb}}}}{{KlC`}{{Cd{fCb}}}}{{IlC`}{{Cd{fCb}}}}{{IjC`}{{Cd{fCb}}}}{{MhC`}{{Cd{fCb}}}}{{ObC`}{{Cd{fCb}}}}{{MlC`}{{Cd{fCb}}}}{{MjC`}{{Cd{fCb}}}}{{OhC`}{{Cd{fCb}}}}{{MnC`}{{Cd{fCb}}}}{{N`C`}{{Cd{fCb}}}}{{NbC`}{{Cd{fCb}}}}{{NdC`}{{Cd{fCb}}}}{{OjC`}{{Cd{fCb}}}}{{NfC`}{{Cd{fCb}}}}{{NhC`}{{Cd{fCb}}}}{{NjC`}{{Cd{fCb}}}}{{NlC`}{{Cd{fCb}}}}{{NnC`}{{Cd{fCb}}}}{{MfC`}{{Cd{fCb}}}}{{JhC`}{{Cd{fCb}}}}{{KbC`}{{Cd{fCb}}}}{{HhC`}{{Cd{fCb}}}}{{KfC`}{{Cd{fCb}}}}{{LjC`}{{Cd{fCb}}}}{{L`C`}{{Cd{fCb}}}}{{OlC`}{{Cd{fCb}}}}{{OnC`}{{Cd{fCb}}}}{{OdC`}{{Cd{fCb}}}}{{A`C`}{{Cd{fCb}}}}{{AbC`}{{Cd{fCb}}}}{{AdC`}{{Cd{fCb}}}}{{AfC`}{{Cd{fCb}}}}{{AhC`}{{Cd{fCb}}}}{{LbC`}{{Cd{fCb}}}}{{LfC`}{{Cd{fCb}}}}{{AjC`}{{Cd{fCb}}}}{{HbC`}{{Cd{fCb}}}}{{H`C`}{{Cd{fCb}}}}{{DnC`}{{Cd{fCb}}}}{{LlC`}{{Cd{fCb}}}}{{AlC`}{{Cd{fCb}}}}{{GlC`}{{Cd{fCb}}}}{{AnC`}{{Cd{fCb}}}}{{AA`C`}{{Cd{fCb}}}}{{HjC`}{{Cd{fCb}}}}{{AAbC`}{{Cd{fCb}}}}{{AAdC`}{{Cd{fCb}}}}{{AAfC`}{{Cd{fCb}}}}{{AAhC`}{{Cd{fCb}}}}{{KhC`}{{Cd{fCb}}}}{{AAjC`}{{Cd{fCb}}}}{{AAlC`}{{Cd{fCb}}}}{{M`C`}{{Cd{fCb}}}}{{AAnC`}{{Cd{fCb}}}}{{AB`C`}{{Cd{fCb}}}}{{MdC`}{{Cd{fCb}}}}{{ABbC`}{{Cd{fCb}}}}```````````````{cc{}}0000000000000000000000000000000000000000000000000000000000000000000{{LdCn}f}{{HfCn}f}{{MbCn}f}{{O`Cn}f}{{JlCn}f}{{K`Cn}f}{{J`Cn}f}{{JdCn}f}{{KnCn}f}{{IlCn}f}{{IjCn}f}{{MhCn}f}{{ObCn}f}{{MlCn}f}{{MjCn}f}{{MnCn}f}{{N`Cn}f}{{NbCn}f}{{NdCn}f}{{NfCn}f}{{NhCn}f}{{NjCn}f}{{NlCn}f}{{NnCn}f}{{MfCn}f}{{JhCn}f}{{KbCn}f}{{HhCn}f}{{KfCn}f}{{LjCn}f}{{L`Cn}f}{{LbCn}f}{{HbCn}f}{{LlCn}f}{{GlCn}f}{{AnCn}f}{{AA`Cn}f}{{AAdCn}f}{{AAhCn}f}{{AAjCn}f}{{AAlCn}f}{{AB`Cn}f}{{ABbCn}f}`````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````{{Ldc}CdFl}{{Hfc}CdFl}{{Jnc}CdFl}{{Mbc}CdFl}{{O`c}CdFl}{{Jlc}CdFl}{{Ofc}CdFl}{{K`c}CdFl}{{J`c}CdFl}{{Jdc}CdFl}{{Knc}CdFl}{{Klc}CdFl}{{Ilc}CdFl}{{Ijc}CdFl}{{Mhc}CdFl}{{Obc}CdFl}{{Mlc}CdFl}{{Mjc}CdFl}{{Ohc}CdFl}{{Mnc}CdFl}{{N`c}CdFl}{{Nbc}CdFl}{{Ndc}CdFl}{{Ojc}CdFl}{{Nfc}CdFl}{{Nhc}CdFl}{{Njc}CdFl}{{Nlc}CdFl}{{Nnc}CdFl}{{Mfc}CdFl}{{Jhc}CdFl}{{Kbc}CdFl}{{Hhc}CdFl}{{Kfc}CdFl}{{Ljc}CdFl}{{L`c}CdFl}{{Olc}CdFl}{{Onc}CdFl}{{Odc}CdFl}{{A`c}CdFl}{{Abc}CdFl}{{Adc}CdFl}{{Afc}CdFl}{{Ahc}CdFl}{{Lbc}CdFl}{{Lfc}CdFl}{{Ajc}CdFl}{{Hbc}CdFl}{{H`c}CdFl}{{Dnc}CdFl}{{Llc}CdFl}{{Alc}CdFl}{{Glc}CdFl}{{Anc}CdFl}{{AA`c}CdFl}{{Hjc}CdFl}{{AAbc}CdFl}{{AAdc}CdFl}{{AAfc}CdFl}{{AAhc}CdFl}{{Khc}CdFl}{{AAjc}CdFl}{{AAlc}CdFl}{{M`c}CdFl}{{AAnc}CdFl}{{AB`c}CdFl}{{Mdc}CdFl}{{ABbc}CdFl}`{JnGf}{O`Gf}{IlGf}{IjGf}{MfGf}{DnGf}{GlGf}```````````````````````````````````````{Ij{{Fd{Ll}}}}```````{ce{}{}}`{c{{Cd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``{cG`{}}0000000000000000000000000000000000000000000000000000000000000000000`````{{Gdc}c{}}{{GdHn}f}{{JjHl}f}10{{GdHh}f}{{JjHh}f}{{GdMf}f}{{JjMf}f}{{GdMh}f}{{JjMh}f}{{GdJ`}f}{{JjJ`}f}{{GdJd}f}{{JjJd}f}{{GdJh}f}{{JjJh}f}{{GdIl}f}{{JjIl}f}{{GdJl}f}{{JjJl}f}{{GdHf}f}{{JjHf}f}{{GdJn}f}{{JjJn}f}{{GdK`}f}{{JjK`}f}{{GdKb}f}{{JjKb}f}{{GdKf}f}{{JjKf}f}{{GdMj}f}{{JjMj}f}{{GdKn}f}{{JjKn}f}{{GdLd}f}{{JjLd}f}{{GdMl}f}{{JjMl}f}{{GdLj}f}{{JjLj}f}{{GdMn}f}{{JjMn}f}{{GdN`}f}{{JjN`}f}{{GdNb}f}{{JjNb}f}{{GdNd}f}{{JjNd}f}{{GdNf}f}{{JjNf}f}{{GdNh}f}{{JjNh}f}{{GdNj}f}{{JjNj}f}{{GdNl}f}{{JjNl}f}{{GdNn}f}{{JjNn}f}{{GdO`}f}{{JjO`}f}{{GdMb}f}{{JjMb}f}{{GdOb}f}{{JjOb}f}``{{cHh}fGd}{{cMf}fGd}{{cMh}fGd}{{cJ`}fGd}{{cJd}fGd}{{cJh}fGd}{{cIl}fGd}{{cJl}fGd}{{cHf}fGd}{{cJn}fGd}{{cK`}fGd}{{cKb}fGd}{{cKf}fGd}{{cMj}fGd}{{cKn}fGd}{{cLd}fGd}{{cMl}fGd}{{cLj}fGd}{{cMn}fGd}{{cN`}fGd}{{cNb}fGd}{{cNd}fGd}{{cNf}fGd}{{cNh}fGd}{{cNj}fGd}{{cNl}fGd}{{cNn}fGd}{{cO`}fGd}{{cMb}fGd}{{cOb}fGd}{{cHh}fJj}{{cMf}fJj}{{cMh}fJj}{{cJ`}fJj}{{cJd}fJj}{{cJh}fJj}{{cIl}fJj}{{cJl}fJj}{{cHf}fJj}{{cJn}fJj}{{cK`}fJj}{{cKb}fJj}{{cKf}fJj}{{cMj}fJj}{{cKn}fJj}{{cLd}fJj}{{cMl}fJj}{{cLj}fJj}{{cMn}fJj}{{cN`}fJj}{{cNb}fJj}{{cNd}fJj}{{cNf}fJj}{{cNh}fJj}{{cNj}fJj}{{cNl}fJj}{{cNn}fJj}{{cO`}fJj}{{cMb}fJj}{{cOb}fJj}````{ce{}{}}00000{{CnLd}ABd}{ABfABf}{{ce}f{}{}}{{}ABf}``{{ABfC`}{{Cd{fCb}}}}{cc{}}00{{D`Cn}f}777{CnBh}{{ddABf}Cn}{{Cnh}f}{Cnf}{{Cn{j{h}}}f}0``<{c{{Cd{e}}}{}{}}00000{cG`{}}00`````````````````{{ABhc}ABh{{ABl{ABj}}}}{{ABhc}ABh{{Bn{}{{Bj{ABj}}}}}}{{}ABn}{{ce}ABj{{ABl{AC`}}}{{ABl{Bh}}}}{{A`c}ABj{{ABl{Bh}}}}{ce{}{}}0000000000000`{ACbACb}{ABnABn}{ABhABh}{ACdACd}{{{ACf{c}}}{{ACf{c}}}{AChACj}}{ABjABj}{{ce}f{}{}}00000{{{ACf{c}}{ACf{c}}}Ab{AClACj}}{{ACbACnC`}{{Cd{fCb}}}}{{}AD`}{{}ACb}>{ABh}{{{ACf{c}}{ACf{c}}}Bb{BdACj}}{{ABjABj}Bb}{{ce}Bb{}{}}000{cABh{{ABl{Bh}}}}{AD`A`}{{ACbC`}{{Cd{fCb}}}}{{ABnC`}{{Cd{fCb}}}}{{ABhC`}{{Cd{fCb}}}}0{{ACdC`}{{Cd{fCb}}}}{{{ACf{c}}C`}{{Cd{fCb}}}ACj}{{ABjC`}{{Cd{fCb}}}}{cc{}}000000{GfABj}{{{ACf{c}}e}f{EdACj}Ef}{ABh{{Fd{{ADd{ADb}}}}}}`{{{ACf{c}}}cACj}{ABjAC`}{ce{}{}}000000{ABjBb}{ABj{{Fd{d}}}}{ABh{{Fd{{ADd{Id}}}}}}`{ABjA`}{AD`Bb}`{{{ACf{c}}}dACj}{{}ACb}{{ce}{{ACf{e}}}{{ADf{d}}}{ADhADjACj}}{{{Fd{Bh}}A`A`}ABj}{{{Fd{Bh}}c}ABj{{ABl{AC`}}}}0{{}ABn}7{{{ACf{c}}{ACf{c}}}{{Fd{Ab}}}{ADlACj}};{{{ACf{c}}AC`A`A`}{{Cd{{ADd{ADn}}AE`}}}ACj}{{ACbcACn}{{Cd{fCb}}}AEb}{AD`f}{AD`{{AEj{{Fd{{AEh{AEd{Kd{AEf}}}}}}}}}}111{{ABj{Fd{Bh}}}f}2{ABh{{Fd{AEl}}}}``{{ACbA`}ACb}{cFn{}}{ce{}{}}00000{cBh{}}{c{{Cd{e}}}{}{}}0000000000000{cG`{}}000000{cABj{{ABl{AC`}}}}>>{cABh{{ABl{Bh}}}}{AD`A`}{{ACbBb}ACb}{ACbACb}:{{ACbBh}ACb}{{ABhc}ABh{{ABl{Bh}}}}{{ABhc}ABh{{ABl{ABj}}}}{{ABhc}ABh{{Bn{}{{Bj{ABj}}}}}}{{{ACf{c}}e}{{ACf{c}}}ACj{{ABl{Bh}}}}{{ACbc}ACb{{ABl{Bh}}}}7{{AD`{Fd{A`}}}AD`}{{AD`Bb}AD`}{{ABhAEl}ABh}1{{ABhc}AEf{ACjADhADj}}{{ACbABn}ACb}<{{ACbA`}ACb}{{ACbAEn}ACb}{{ACbAF`}ACb}?>{{AFbd{Kd{ABh}}}{{AEh{AEd{Kd{AEf}}}}}}``````````````````````````````````````````````````````{c{{Gn{e}}}{}{}}{ce{}{}}00000{AFdAFd}{{ce}f{}{}}{{}AFd}{{AFdAFd}Bb}{{ce}Bb{}{}}0`{{AFdC`}{{Cd{fCb}}}}0{cc{}}00777{AFdBb}{dAFd}{{Afd}AFf}`{AFfAFh}`{cFn{}}<{AFdd}{cBh{}}`{c{{Cd{e}}}{}{}}00000{cG`{}}00``````````````````{AFjBb}{c{{Gn{e}}}{}{}}0000{Ghd}{AFld}101{ce{}{}}10000000000000{GhGh}{AFlAFl}{AFjAFj}{AFnAFn}{AG`AG`}{AGbAGb}{GfGf}{{ce}f{}{}}000000{{GfGf}Ab}{{}AFj}{{}Gf}{Gh}{AFl}`{{Ghc}Bb{{ADf{d}}}}{{Ghd}Bb}{{AFlc}Bb{{ADf{d}}}}{{AFjAFj}Bb}{{AFnAFn}Bb}{{AG`AG`}Bb}{{AGbAGb}Bb}{{GfGf}Bb}{{ce}Bb{}{}}0000000000000{{GhC`}{{Cd{fCb}}}}0{{AFlC`}{{Cd{fCb}}}}0{{AFjC`}{{Cd{fCb}}}}{{AFnC`}{{Cd{fCb}}}}{{AG`C`}{{Cd{fCb}}}}{{AGbC`}{{Cd{fCb}}}}{{GfC`}{{Cd{fCb}}}}{cc{}}{dGh}{BhAFl}{dAFl}333333{c{{Cd{AFjAGd}}}{{ADf{AFb}}}}{{Ghc}fEf}{{AFlc}fEf}{{AFjc}fEf}{{AFnc}fEf}{{AG`c}fEf}{{AGbc}fEf}{{Gfc}fEf}{ce{}{}}000000{GhAFl}{GhBh}{AFlBh}{AFlBb}{AFjBb}000000{AFlA`}{{GfGf}Gf}{AFjAG`}{dAFl}{{IfIf}Gf}1{{GfGf}{{Fd{Ab}}}}{{Ghc}CdFl}{{AFlc}CdFl}{{AFjc}CdFl}{{AFnc}CdFl}{{AG`c}CdFl}{{AGbc}CdFl}{{Gfc}CdFl}{GfIf}{{Gfd}d}{AGfGf}`{GhAFl}{cFn{}}0{ce{}{}}000000{cBh{}}0{c{{Cd{e}}}{}{}}0000000000000{cG`{}}000000{{AFjBb}AFj}00000","c":[],"p":[[5,"String",6],[1,"str"],[1,"unit"],[1,"u8"],[1,"slice"],[5,"Vec",1999],[5,"Bump",2000],[1,"usize"],[6,"Ordering",2001],[5,"Box",6],[5,"Allocator",6],[10,"Sized",2002],[5,"Vec",6],[5,"Vec",2003],[5,"Drain",2004],[10,"RangeBounds",2005],[1,"bool"],[10,"PartialEq",2001],[6,"Cow",2006],[5,"String",2007],[17,"Item"],[1,"char"],[10,"IntoIterator",2008],[5,"Formatter",2009],[5,"Error",2009],[6,"Result",2010],[10,"Debug",2009],[1,"u16"],[5,"FromUtf16Error",2004],[5,"FromUtf8Error",2004],[5,"Codegen",1496],[10,"Gen",1496],[5,"Codegen",2011],[10,"Gen",2012],[5,"Codegen",2013],[5,"Context",2014],[10,"Gen",2015],[5,"Decorator",2016],[6,"AttributeSequenceValue",386],[6,"Precedence",2017],[10,"GenExpr",2015],[10,"Hash",2018],[10,"Hasher",2018],[5,"RangeFull",2005],[5,"RangeFrom",2005],[5,"RangeToInclusive",2005],[5,"Range",2005],[5,"RangeInclusive",2005],[5,"RangeTo",2005],[6,"Option",2019],[17,"Output"],[10,"FnMut",2020],[10,"Serialize",2021],[10,"Serializer",2021],[5,"CompactString",2022],[5,"TypeId",2023],[5,"AstBuilder",152],[10,"Visit",152],[5,"Span",1811],[5,"Atom",1811],[6,"Expression",2024],[6,"DirectiveAttribute",386],[5,"Out",2025],[6,"AttributeValue",386],[5,"Attribute",386],[5,"BindingPattern",2024],[5,"Fragment",386],[5,"AwaitBlock",386],[6,"BindDirectiveExpression",386],[6,"AstType",152],[6,"AstKind",152],[5,"Comment",152],[5,"Trivias",152],[10,"Iterator",2026],[1,"u32"],[5,"Range",2027],[6,"ElementAttribute",386],[6,"Element",386],[5,"VariableDeclaration",2024],[5,"ConstTag",386],[5,"IdentifierReference",2024],[5,"DebugTag",386],[5,"IdentifierName",2024],[5,"EachBlock",386],[10,"VisitMut",152],[5,"ExpressionTag",386],[6,"FragmentNode",386],[5,"HtmlTag",386],[5,"IfBlock",386],[5,"Vec",2028],[5,"KeyBlock",386],[6,"LetDirectiveExpression",386],[5,"BTreeMap",2027],[6,"RenderTagExpression",386],[5,"RenderTag",386],[5,"Style",386],[5,"Script",386],[5,"Root",386],[6,"ScriptContext",386],[5,"Program",2024],[5,"SnippetBlock",386],[5,"SpreadAttribute",386],[5,"StyleSheet",2029],[6,"StyleDirectiveModifier",386],[5,"Text",386],[6,"TransitionDirectiveModifier",386],[6,"Block",386],[5,"Component",386],[5,"RegularElement",386],[5,"SlotElement",386],[5,"SvelteBody",386],[5,"SvelteComponent",386],[5,"SvelteDocument",386],[5,"SvelteElement",386],[5,"SvelteFragment",386],[5,"SvelteHead",386],[5,"SvelteOptionsRaw",386],[5,"SvelteSelf",386],[5,"SvelteWindow",386],[6,"Tag",386],[5,"TitleElement",386],[6,"Namespace",386],[5,"ExpressionTagMetadata",386],[5,"RegularElementMetadata",386],[5,"SvelteElementMetadata",386],[5,"StyleContent",386],[5,"SvelteOptions",386],[5,"CustomElementOptions",386],[6,"CustomElementShadow",386],[5,"CustomElementProp",386],[6,"CustomElementPropType",386],[6,"CustomElementExtend",386],[5,"RootMetadata",386],[5,"SpreadAttributeMetadata",386],[5,"AnimateDirective",386],[5,"BindDirective",386],[5,"BindDirectiveMetadata",386],[5,"ClassDirective",386],[5,"ClassDirectiveMetadata",386],[5,"LetDirective",386],[5,"OnDirective",386],[5,"StyleDirective",386],[5,"StyleDirectiveMetadata",386],[5,"TransitionDirective",386],[5,"UseDirective",386],[5,"CodegenReturn",1496],[5,"CodegenOptions",1496],[5,"OxcDiagnostic",1538],[5,"LabeledSpan",1538],[10,"Into",2030],[5,"GraphicalTheme",1538],[5,"SourceSpan",2031],[5,"GraphicalReportHandler",1538],[5,"OxcDiagnosticInner",1538],[5,"NamedSource",1538],[10,"Clone",2032],[10,"SourceCode",2031],[10,"Ord",2001],[10,"Diagnostic",2031],[5,"DiagnosticService",1538],[10,"Display",2009],[5,"Box",2033],[10,"AsRef",2030],[10,"Send",2002],[10,"Sync",2002],[10,"PartialOrd",2001],[10,"SpanContents",2031],[6,"MietteError",2034],[10,"Write",2009],[5,"PathBuf",2035],[5,"Report",2036],[1,"tuple"],[5,"Sender",2037],[6,"Severity",2031],[6,"WordSeparator",2038],[6,"WordSplitter",2039],[5,"Path",2035],[6,"Kind",1715],[5,"Parser",1715],[5,"ParserReturn",1715],[5,"SourceType",1811],[5,"CompactStr",1811],[6,"Language",1811],[6,"ModuleKind",1811],[6,"LanguageVariant",1811],[5,"UnknownExtension",2040],[10,"GetSpan",1811],[8,"Severity",1538],[8,"Result",1538]],"b":[[15,"impl-AsRef%3C%5Bu8%5D%3E-for-String%3C\'bump%3E"],[16,"impl-AsRef%3Cstr%3E-for-String%3C\'bump%3E"],[47,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-String%3C\'bump%3E"],[48,"impl-PartialEq%3C%26str%3E-for-String%3C\'bump%3E"],[49,"impl-PartialEq-for-String%3C\'bump%3E"],[50,"impl-PartialEq%3Cstr%3E-for-String%3C\'bump%3E"],[51,"impl-PartialEq%3CString%3E-for-String%3C\'bump%3E"],[56,"impl-Extend%3Cchar%3E-for-String%3C\'bump%3E"],[57,"impl-Extend%3C%26str%3E-for-String%3C\'bump%3E"],[58,"impl-Extend%3CString%3C\'bump%3E%3E-for-String%3C\'bump%3E"],[59,"impl-Extend%3CString%3E-for-String%3C\'bump%3E"],[60,"impl-Extend%3C%26char%3E-for-String%3C\'bump%3E"],[61,"impl-Extend%3CCow%3C\'a,+str%3E%3E-for-String%3C\'bump%3E"],[64,"impl-Display-for-String%3C\'bump%3E"],[65,"impl-Debug-for-String%3C\'bump%3E"],[72,"impl-FromIteratorIn%3Cchar%3E-for-String%3C\'bump%3E"],[73,"impl-String%3C\'bump%3E"],[80,"impl-Gen%3CMINIFY%3E-for-Box%3C\'a,+T%3E"],[81,"impl-Gen%3CMINIFY%3E-for-Box%3C\'a,+T%3E"],[82,"impl-Gen%3CMINIFY%3E-for-Box%3C\'a,+T%3E"],[83,"impl-Gen%3CMINIFY%3E-for-Vec%3C\'a,+Decorator%3C\'a%3E%3E"],[84,"impl-Gen%3CMINIFY%3E-for-Vec%3C\'a,+AttributeSequenceValue%3C\'a%3E%3E"],[89,"impl-Index%3Cusize%3E-for-Vec%3C\'alloc,+T%3E"],[90,"impl-Index%3Cusize%3E-for-%26Vec%3C\'alloc,+T%3E"],[91,"impl-Index%3CRangeFull%3E-for-String%3C\'bump%3E"],[92,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-String%3C\'bump%3E"],[93,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-String%3C\'bump%3E"],[94,"impl-Index%3CRange%3Cusize%3E%3E-for-String%3C\'bump%3E"],[95,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-String%3C\'bump%3E"],[96,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-String%3C\'bump%3E"],[97,"impl-IndexMut%3CRangeFull%3E-for-String%3C\'bump%3E"],[98,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-String%3C\'bump%3E"],[99,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-String%3C\'bump%3E"],[100,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-String%3C\'bump%3E"],[101,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-String%3C\'bump%3E"],[102,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-String%3C\'bump%3E"],[111,"impl-IntoIterator-for-%26Vec%3C\'alloc,+T%3E"],[112,"impl-IntoIterator-for-Vec%3C\'alloc,+T%3E"],[1603,"impl-Display-for-OxcDiagnostic"],[1604,"impl-Debug-for-OxcDiagnostic"],[1783,"impl-Display-for-Kind"],[1784,"impl-Debug-for-Kind"],[1875,"impl-PartialEq%3CT%3E-for-Atom%3C\'a%3E"],[1876,"impl-PartialEq%3Cstr%3E-for-Atom%3C\'a%3E"],[1897,"impl-Debug-for-Atom%3C\'a%3E"],[1898,"impl-Display-for-Atom%3C\'a%3E"],[1899,"impl-Debug-for-CompactStr"],[1900,"impl-Display-for-CompactStr"],[1908,"impl-From%3CString%3E-for-CompactStr"],[1909,"impl-From%3C%26str%3E-for-CompactStr"]]}],\
["ssc_analyzer",{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":"","c":[],"p":[],"b":[]}],\
["ssc_ast",{"doc":"SSC AST","t":"FGGPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFIEENONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFPPPPFPGGFPFPGFGPPPPPFPFFPFPGFFGGFPPGPFPGPGFPPFPFGPPFPPPPFPPFPFPGPPPPGPPPPFPPFPFFPGFFFGPFPFPFPFPFFFPFGFPFPFPFPFFPFPFFPFPFPPGPFPPFPFPGFPOONNNNOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOOOOOONNOOOOONNNOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["AstBuilder","AstKind","AstType","AwaitBlock","AwaitBlock","Comment","Component","Component","ConstTag","ConstTag","DebugTag","DebugTag","EachBlock","EachBlock","ExpressionTag","ExpressionTag","HtmlTag","HtmlTag","IfBlock","IfBlock","KeyBlock","KeyBlock","RegularElement","RegularElement","RenderTag","RenderTag","Root","Root","SlotElement","SlotElement","SnippetBlock","SnippetBlock","SvelteBody","SvelteBody","SvelteComponent","SvelteComponent","SvelteDocument","SvelteDocument","SvelteElement","SvelteElement","SvelteFragment","SvelteFragment","SvelteHead","SvelteHead","SvelteOptionsRaw","SvelteOptionsRaw","SvelteSelf","SvelteSelf","SvelteWindow","SvelteWindow","Text","Text","TitleElement","TitleElement","Trivias","TriviasMap","Visit","VisitMut","alloc","allocator","animate_directive","ast","attribute","await_block","bind_directive","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_directive","clone","clone","clone","clone_into","clone_into","clone_into","comments","comments_range","component","const_tag","copy","debug_name","debug_tag","default","each_block","end","expression_tag","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","has_comments_between","html_tag","if_block","into","into","into","into","into","irregular_whitespaces","key_block","let_directive","new","new","new","new_atom","new_str","new_vec","new_vec_from_iter","new_vec_single","new_vec_with_capacity","on_directive","regular_element","render_tag","root","script","slot_element","snippet_block","span","spread_attribute","style","style_directive","svelte_body","svelte_component","svelte_document","svelte_element","svelte_fragment","svelte_head","svelte_options","svelte_self","svelte_window","text","title_element","to_owned","to_owned","to_owned","transition_directive","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_directive","visit","AnimateDirective","AnimateDirective","Array","ArrayExpression","ArrowFunction","Attribute","Attribute","AttributeSequenceValue","AttributeValue","AwaitBlock","AwaitBlock","BindDirective","BindDirective","BindDirectiveExpression","BindDirectiveMetadata","Block","Block","Bool","Boolean","Call","Chain","ClassDirective","ClassDirective","ClassDirectiveMetadata","Component","Component","ConstTag","ConstTag","CustomElementExtend","CustomElementOptions","CustomElementProp","CustomElementPropType","CustomElementShadow","DebugTag","DebugTag","Default","DirectiveAttribute","DirectiveAttribute","EachBlock","EachBlock","Element","Element","ElementAttribute","ExpressionTag","ExpressionTag","ExpressionTag","ExpressionTagMetadata","Foreign","Fragment","FragmentNode","Global","Html","HtmlTag","HtmlTag","Identifier","Identifier","Identifier","IfBlock","IfBlock","Important","KeyBlock","KeyBlock","LetDirective","LetDirective","LetDirectiveExpression","Local","MathMl","MemberExpression","Module","Namespace","None","Number","Object","ObjectExpression","OnDirective","OnDirective","Open","RegularElement","RegularElement","RegularElementMetadata","RenderTag","RenderTag","RenderTagExpression","Root","RootMetadata","Script","ScriptContext","Sequence","SlotElement","SlotElement","SnippetBlock","SnippetBlock","SpreadAttribute","SpreadAttribute","SpreadAttributeMetadata","String","Style","StyleContent","StyleDirective","StyleDirective","StyleDirectiveMetadata","StyleDirectiveModifier","SvelteBody","SvelteBody","SvelteComponent","SvelteComponent","SvelteDocument","SvelteDocument","SvelteElement","SvelteElement","SvelteElementMetadata","SvelteFragment","SvelteFragment","SvelteHead","SvelteHead","SvelteOptions","SvelteOptionsRaw","SvelteOptionsRaw","SvelteSelf","SvelteSelf","SvelteWindow","SvelteWindow","Svg","Tag","Tag","Text","Text","Text","TitleElement","TitleElement","TransitionDirective","TransitionDirective","TransitionDirectiveModifier","UseDirective","UseDirective","accessors","alternate","as_attribute","as_directive_attribute","as_spread_attribute","attribute","attribute","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","attributes","binding_group_name","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catch","clone","clone_into","consequent","contains_call_expression","contains_call_expression","content","context","context","css","custom_element","data","declaration","default","directive_attribute","dynamic","dynamic","dynamic","dynamic","elseif","eq","equivalent","equivalent","error","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","expression","extend","fallback","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_spread","identifiers","immutable","index","instance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intro","key","metadata","metadata","metadata","metadata","metadata","metadata","metadata","modifiers","modifiers","modifiers","module","name","name","name","name","name","name","name","name","name","name","name","namespace","nodes","options","outro","parameters","parent_each_blocks","pending","preserve_whitespace","program","props","raw","reflect","runes","scoped","scoped","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shadow","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spread_attribute","styles","stylesheet","svg","svg","tag","test","then","to_owned","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","Visit","VisitMut","alloc","alloc","enter_node","enter_node","enter_node","enter_node","leave_node","leave_node","leave_node","leave_node","visit_await_block","visit_await_block","visit_await_block","visit_await_block","visit_block","visit_block","visit_block","visit_block","visit_component","visit_component","visit_component","visit_component","visit_const_tag","visit_const_tag","visit_const_tag","visit_const_tag","visit_debug_tag","visit_debug_tag","visit_debug_tag","visit_debug_tag","visit_each_block","visit_each_block","visit_each_block","visit_each_block","visit_element","visit_element","visit_element","visit_element","visit_expression_tag","visit_expression_tag","visit_expression_tag","visit_expression_tag","visit_fragment","visit_fragment","visit_fragment","visit_fragment","visit_fragment_node","visit_fragment_node","visit_fragment_node","visit_fragment_node","visit_html_tag","visit_html_tag","visit_html_tag","visit_html_tag","visit_if_block","visit_if_block","visit_if_block","visit_if_block","visit_key_block","visit_key_block","visit_key_block","visit_key_block","visit_regular_element","visit_regular_element","visit_regular_element","visit_regular_element","visit_render_tag","visit_render_tag","visit_render_tag","visit_render_tag","visit_root","visit_root","visit_root","visit_root","visit_slot_element","visit_slot_element","visit_slot_element","visit_slot_element","visit_snippet_block","visit_snippet_block","visit_snippet_block","visit_snippet_block","visit_svelte_body","visit_svelte_body","visit_svelte_body","visit_svelte_body","visit_svelte_component","visit_svelte_component","visit_svelte_component","visit_svelte_component","visit_svelte_document","visit_svelte_document","visit_svelte_document","visit_svelte_document","visit_svelte_element","visit_svelte_element","visit_svelte_element","visit_svelte_element","visit_svelte_fragment","visit_svelte_fragment","visit_svelte_fragment","visit_svelte_fragment","visit_svelte_head","visit_svelte_head","visit_svelte_head","visit_svelte_head","visit_svelte_options_raw","visit_svelte_options_raw","visit_svelte_options_raw","visit_svelte_options_raw","visit_svelte_self","visit_svelte_self","visit_svelte_self","visit_svelte_self","visit_svelte_window","visit_svelte_window","visit_svelte_window","visit_svelte_window","visit_tag","visit_tag","visit_tag","visit_tag","visit_text","visit_text","visit_text","visit_text","visit_title_element","visit_title_element","visit_title_element","visit_title_element","walk","walk_mut","walk_await_block","walk_block","walk_component","walk_const_tag","walk_debug_tag","walk_each_block","walk_element","walk_expression_tag","walk_fragment","walk_fragment_node","walk_html_tag","walk_if_block","walk_key_block","walk_regular_element","walk_render_tag","walk_root","walk_slot_element","walk_snippet_block","walk_svelte_body","walk_svelte_component","walk_svelte_document","walk_svelte_element","walk_svelte_fragment","walk_svelte_head","walk_svelte_options_raw","walk_svelte_self","walk_svelte_window","walk_tag","walk_text","walk_title_element","walk_await_block_mut","walk_block_mut","walk_component_mut","walk_const_tag_mut","walk_debug_tag_mut","walk_each_block_mut","walk_element_mut","walk_expression_tag_mut","walk_fragment_mut","walk_fragment_node_mut","walk_html_tag_mut","walk_if_block_mut","walk_key_block_mut","walk_regular_element_mut","walk_render_tag_mut","walk_root_mut","walk_slot_element_mut","walk_snippet_block_mut","walk_svelte_body_mut","walk_svelte_component_mut","walk_svelte_document_mut","walk_svelte_element_mut","walk_svelte_fragment_mut","walk_svelte_head_mut","walk_svelte_options_raw_mut","walk_svelte_self_mut","walk_svelte_window_mut","walk_tag_mut","walk_text_mut","walk_title_element_mut"],"q":[[0,"ssc_ast"],[166,"ssc_ast::ast"],[1103,"ssc_ast::visit"],[1237,"ssc_ast::visit::walk"],[1267,"ssc_ast::visit::walk_mut"],[1297,"oxc_allocator::arena"],[1298,"oxc_span::span"],[1299,"oxc_span::atom"],[1300,"oxc_ast::ast::js"],[1301,"core::option"],[1302,"oxc_ast::ast::js"],[1303,"alloc::collections::btree::map"],[1304,"core::ops::range"],[1305,"oxc_allocator::arena"],[1306,"oxc_ast::ast::js"],[1307,"core::fmt"],[1308,"oxc_allocator"],[1309,"core::iter::traits::collect"],[1310,"oxc_ast::ast::js"],[1311,"core::result"],[1312,"core::any"],[1313,"serde::ser"]],"d":["","Untyped AST Node Kind","","","","Comment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the AST kind name with minimal details. Particularly …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntax tree traversal","Syntax tree traversal to mutate an exclusive borrow of a …i":[0,0,0,14,15,0,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,0,0,0,0,1,1,1,0,1,1,1,1,14,15,16,18,1,14,15,16,18,1,14,15,16,14,15,16,18,18,1,1,1,15,1,18,1,16,1,14,15,16,18,1,1,14,15,16,18,18,1,1,1,14,15,16,18,18,1,1,1,16,18,1,1,1,1,1,1,1,1,1,1,1,1,1,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,15,16,1,1,14,15,16,18,1,14,15,16,18,1,14,15,16,18,1,0,0,7,88,44,89,0,24,0,0,0,82,0,7,0,0,0,38,8,88,49,49,0,7,0,0,26,0,65,0,0,0,0,0,0,65,54,0,24,0,82,0,38,0,0,65,91,0,64,0,0,61,64,0,65,89,13,44,0,82,59,0,82,0,7,0,61,64,13,54,0,86,88,88,44,0,7,86,0,26,0,0,65,0,0,0,0,0,8,0,26,0,82,0,24,0,88,0,0,0,7,0,0,0,26,0,26,0,26,0,26,0,0,26,0,26,0,0,26,0,26,0,26,64,0,38,0,38,91,0,26,0,7,0,0,7,84,41,24,24,24,24,87,67,68,69,70,72,73,74,75,77,78,79,80,81,51,84,52,95,34,56,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,12,64,64,41,66,92,51,34,52,53,84,60,28,64,24,66,92,97,101,41,54,54,54,12,35,40,50,73,75,34,12,43,56,57,93,94,96,98,99,102,103,85,34,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,53,67,68,69,70,72,73,74,75,77,78,79,80,81,43,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,71,32,84,34,53,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,102,34,53,35,70,75,57,96,100,99,100,102,53,67,70,9,93,94,96,98,99,100,102,103,84,11,53,102,56,95,12,84,52,85,60,87,84,71,76,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,85,38,65,26,24,82,91,7,53,60,35,40,28,32,50,67,68,69,70,72,73,74,75,77,78,79,80,81,34,41,12,43,56,51,83,84,52,9,57,93,94,96,98,99,100,102,103,24,83,51,71,76,85,41,12,64,11,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,90,87,53,11,38,60,65,35,66,40,28,32,50,49,26,24,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,34,41,12,43,56,51,83,84,64,85,86,87,88,89,52,54,90,9,8,91,57,92,7,93,94,13,95,96,97,98,44,99,100,59,101,102,61,103,12,9,100,0,0,105,105,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,105,105,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````````````````````````````````````````````````````````{{bc}{{d{c}}}{}}`{{bfh{l{j}}}n}`{{bfhA`}Ab}{{bfj{l{Ad}}{l{Ad}}{l{Af}}{l{Af}}{l{Af}}}Ah}{{bfhAj}n}{ce{}{}}000000000{{bfhj}n}{AlAl}{AnAn}{B`B`}{{ce}Bb{}{}}00{Bd{{`{{Bh{}{{Bf{f}}}}}}}}{{Bdc}{{Bl{BjB`}}}{{Bn{Bj}}}}{{bfh{Cb{C`}}Af}Cd}{{bfCf}Ch}{{bc}c{}}{An{{Cl{Cj}}}}{{bf{Cb{Cn}}}D`}{{}Bd}{{bfjAdAf{l{Af}}{l{Db}}{l{j}}}Dd}`{{bfj}Df}{{AlDh}Dj}{{AnDh}Dj}{{B`Dh}Dj}{{BdDh}Dj}{{b{Cb{Dl}}Dn}Af}{cc{}}0000{{Bdf}Dn}{{bfj}E`}{{bfDnjAf{l{Af}}}Eb}{ce{}{}}0000{Bd{{Ed{f}}}}{{bfjAf}Ef}{{bfh{l{Eh}}}n}{Ejb}{BjB`}{{El{Ed{f}}}Bd}{{bCj}h}{{bCj}Cj}{b{{Cb{c}}}{}}{{be}{{Cb{c}}}{}{{En{}{{Bf{c}}}}}}{{bc}{{Cb{c}}}{}}{{bF`}{{Cb{c}}}{}}{{bfh{l{j}}{Cb{h}}}n}{{bfh{Cb{C`}}Af}Cd}{{bfFb}Fd}{{bfAf{l{Ff}}{l{Fh}}{l{Fh}}Dn}Fj}{{bfFlFn{Cb{Ab}}}Fh}{{bf{Cb{C`}}Af}Cd}{{bfDb{Cb{Ad}}Af}G`}{Anf}{{bfj}Gb}{{bfGd{Cb{Ab}}fh}Ff}{{bfhA`{Cb{Gf}}}n}5{{bf{Cb{C`}}Afj}Cd}6066666{{bfh}Gh}7{ce{}{}}00{{bfh{l{j}}{Cb{Gj}}DnDn}n}{c{{Gl{e}}}{}{}}000000000{cGn{}}0000{{bfh{l{j}}}n}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{C`{{l{Ab}}}}{C`{{l{n}}}}{C`{{l{Gb}}}}2````````````````````7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777`{H`H`}{{ce}Bb{}{}}``````````{{}H`}4`````{{FlFl}Dn}{{ce}Dn{}{}}0````````````````````{{FjDh}Dj}{{AfDh}Dj}{{DlDh}Dj}{{GhDh}Dj}{{HbDh}Dj}{{DfDh}Dj}{{HdDh}Dj}{{E`Dh}Dj}{{ChDh}Dj}{{D`Dh}Dj}{{FdDh}Dj}{{FbDh}Dj}{{CdDh}Dj}{{C`Dh}Dj}{{HfDh}Dj}{{HhDh}Dj}{{HjDh}Dj}{{HlDh}Dj}{{HnDh}Dj}{{I`Dh}Dj}{{IbDh}Dj}{{IdDh}Dj}{{IfDh}Dj}{{IhDh}Dj}{{IjDh}Dj}{{IlDh}Dj}{{InDh}Dj}{{J`Dh}Dj}{{JbDh}Dj}{{JdDh}Dj}{{DdDh}Dj}{{EbDh}Dj}{{AhDh}Dj}{{EfDh}Dj}{{G`Dh}Dj}{{FfDh}Dj}{{JfDh}Dj}{{JhDh}Dj}{{H`Dh}Dj}{{JjDh}Dj}{{JlDh}Dj}{{JnDh}Dj}{{K`Dh}Dj}{{KbDh}Dj}{{FhDh}Dj}{{FlDh}Dj}{{KdDh}Dj}{{AbDh}Dj}{{A`Dh}Dj}{{KfDh}Dj}{{GbDh}Dj}{{KhDh}Dj}{{nDh}Dj}{{KjDh}Dj}{{KlDh}Dj}{{AjDh}Dj}{{KnDh}Dj}{{L`Dh}Dj}{{LbDh}Dj}{{LdDh}Dj}{{EhDh}Dj}{{LfDh}Dj}{{LhDh}Dj}{{GfDh}Dj}{{LjDh}Dj}{{LlDh}Dj}{{GjDh}Dj}{{LnDh}Dj}```````````````{cc{}}0000000000000000000000000000000000000000000000000000000000000000000`````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````{{Fjc}GlM`}{{Afc}GlM`}{{Dlc}GlM`}{{Ghc}GlM`}{{Hbc}GlM`}{{Dfc}GlM`}{{Hdc}GlM`}{{E`c}GlM`}{{Chc}GlM`}{{D`c}GlM`}{{Fdc}GlM`}{{Fbc}GlM`}{{Cdc}GlM`}{{C`c}GlM`}{{Hfc}GlM`}{{Hhc}GlM`}{{Hjc}GlM`}{{Hlc}GlM`}{{Hnc}GlM`}{{I`c}GlM`}{{Ibc}GlM`}{{Idc}GlM`}{{Ifc}GlM`}{{Ihc}GlM`}{{Ijc}GlM`}{{Ilc}GlM`}{{Inc}GlM`}{{J`c}GlM`}{{Jbc}GlM`}{{Jdc}GlM`}{{Ddc}GlM`}{{Ebc}GlM`}{{Ahc}GlM`}{{Efc}GlM`}{{G`c}GlM`}{{Ffc}GlM`}{{Jfc}GlM`}{{Jhc}GlM`}{{H`c}GlM`}{{Jjc}GlM`}{{Jlc}GlM`}{{Jnc}GlM`}{{K`c}GlM`}{{Kbc}GlM`}{{Fhc}GlM`}{{Flc}GlM`}{{Kdc}GlM`}{{Abc}GlM`}{{A`c}GlM`}{{Kfc}GlM`}{{Gbc}GlM`}{{Khc}GlM`}{{nc}GlM`}{{Kjc}GlM`}{{Klc}GlM`}{{Ajc}GlM`}{{Knc}GlM`}{{L`c}GlM`}{{Lbc}GlM`}{{Ldc}GlM`}{{Ehc}GlM`}{{Lfc}GlM`}{{Lhc}GlM`}{{Gfc}GlM`}{{Ljc}GlM`}{{Llc}GlM`}{{Gjc}GlM`}{{Lnc}GlM`}`{Dlf}{Hbf}{Cdf}{C`f}{Jdf}{Kff}{nf}```````````````````````````````````````{C`{{l{Gb}}}}```````{ce{}{}}`{c{{Gl{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``{cGn{}}0000000000000000000000000000000000000000000000000000000000000000000`````{{Mbc}c{}}0{{MbAn}Bb}0{{MdAl}Bb}01100{{MbAh}Bb}0{{MdAh}Bb}0{{MbJd}Bb}0{{MdJd}Bb}0{{MbHf}Bb}0{{MdHf}Bb}0{{MbCh}Bb}0{{MdCh}Bb}0{{MbD`}Bb}0{{MdD`}Bb}0{{MbDd}Bb}0{{MdDd}Bb}0{{MbCd}Bb}0{{MdCd}Bb}0{{MbDf}Bb}0{{MdDf}Bb}0{{MbAf}Bb}0{{MdAf}Bb}0{{MbDl}Bb}0{{MdDl}Bb}0{{MbE`}Bb}0{{MdE`}Bb}0{{MbEb}Bb}0{{MdEb}Bb}0{{MbEf}Bb}0{{MdEf}Bb}0{{MbHl}Bb}0{{MdHl}Bb}0{{MbFd}Bb}0{{MdFd}Bb}0{{MbFj}Bb}0{{MdFj}Bb}0{{MbHj}Bb}0{{MdHj}Bb}0{{MbG`}Bb}0{{MdG`}Bb}0{{MbI`}Bb}0{{MdI`}Bb}0{{MbIb}Bb}0{{MdIb}Bb}0{{MbId}Bb}0{{MdId}Bb}0{{MbIf}Bb}0{{MdIf}Bb}0{{MbIj}Bb}0{{MdIj}Bb}0{{MbIl}Bb}0{{MdIl}Bb}0{{MbIn}Bb}0{{MdIn}Bb}0{{MbJ`}Bb}0{{MdJ`}Bb}0{{MbJb}Bb}0{{MdJb}Bb}0{{MbHb}Bb}0{{MdHb}Bb}0{{MbGh}Bb}0{{MdGh}Bb}0{{MbHh}Bb}0{{MdHh}Bb}0``{{cAh}BbMb}{{cJd}BbMb}{{cHf}BbMb}{{cCh}BbMb}{{cD`}BbMb}{{cDd}BbMb}{{cCd}BbMb}{{cDf}BbMb}{{cAf}BbMb}{{cDl}BbMb}{{cE`}BbMb}{{cEb}BbMb}{{cEf}BbMb}{{cHl}BbMb}{{cFd}BbMb}{{cFj}BbMb}{{cHj}BbMb}{{cG`}BbMb}{{cI`}BbMb}{{cIb}BbMb}{{cId}BbMb}{{cIf}BbMb}{{cIj}BbMb}{{cIl}BbMb}{{cIn}BbMb}{{cJ`}BbMb}{{cJb}BbMb}{{cHb}BbMb}{{cGh}BbMb}{{cHh}BbMb}{{cAh}BbMd}{{cJd}BbMd}{{cHf}BbMd}{{cCh}BbMd}{{cD`}BbMd}{{cDd}BbMd}{{cCd}BbMd}{{cDf}BbMd}{{cAf}BbMd}{{cDl}BbMd}{{cE`}BbMd}{{cEb}BbMd}{{cEf}BbMd}{{cHl}BbMd}{{cFd}BbMd}{{cFj}BbMd}{{cHj}BbMd}{{cG`}BbMd}{{cI`}BbMd}{{cIb}BbMd}{{cId}BbMd}{{cIf}BbMd}{{cIj}BbMd}{{cIl}BbMd}{{cIn}BbMd}{{cJ`}BbMd}{{cJb}BbMd}{{cHb}BbMd}{{cGh}BbMd}{{cHh}BbMd}","c":[],"p":[[5,"AstBuilder",0],[5,"Box",1297],[5,"Span",1298],[5,"Atom",1299],[6,"Expression",1300],[6,"Option",1301],[6,"DirectiveAttribute",166],[6,"AttributeValue",166],[5,"Attribute",166],[5,"BindingPattern",1300],[5,"Fragment",166],[5,"AwaitBlock",166],[6,"BindDirectiveExpression",166],[6,"AstType",0],[6,"AstKind",0],[5,"Comment",0],[1,"unit"],[5,"Trivias",0],[17,"Item"],[10,"Iterator",1302],[1,"u32"],[5,"Range",1303],[10,"RangeBounds",1304],[6,"ElementAttribute",166],[5,"Vec",1297],[6,"Element",166],[5,"VariableDeclaration",1300],[5,"ConstTag",166],[1,"str"],[6,"Cow",1305],[5,"IdentifierReference",1300],[5,"DebugTag",166],[5,"IdentifierName",1300],[5,"EachBlock",166],[5,"ExpressionTag",166],[5,"Formatter",1306],[8,"Result",1306],[6,"FragmentNode",166],[1,"bool"],[5,"HtmlTag",166],[5,"IfBlock",166],[5,"Vec",1307],[5,"KeyBlock",166],[6,"LetDirectiveExpression",166],[5,"Allocator",1308],[8,"TriviasMap",0],[10,"IntoIterator",1309],[1,"usize"],[6,"RenderTagExpression",166],[5,"RenderTag",166],[5,"Style",166],[5,"Script",166],[5,"Root",166],[6,"ScriptContext",166],[5,"Program",1300],[5,"SnippetBlock",166],[5,"SpreadAttribute",166],[5,"StyleSheet",1310],[6,"StyleDirectiveModifier",166],[5,"Text",166],[6,"TransitionDirectiveModifier",166],[6,"Result",1311],[5,"TypeId",1312],[6,"Namespace",166],[6,"Tag",166],[5,"ExpressionTagMetadata",166],[5,"Component",166],[5,"TitleElement",166],[5,"SlotElement",166],[5,"RegularElement",166],[5,"RegularElementMetadata",166],[5,"SvelteBody",166],[5,"SvelteComponent",166],[5,"SvelteDocument",166],[5,"SvelteElement",166],[5,"SvelteElementMetadata",166],[5,"SvelteFragment",166],[5,"SvelteHead",166],[5,"SvelteOptionsRaw",166],[5,"SvelteSelf",166],[5,"SvelteWindow",166],[6,"Block",166],[5,"StyleContent",166],[5,"SvelteOptions",166],[5,"CustomElementOptions",166],[6,"CustomElementShadow",166],[5,"CustomElementProp",166],[6,"CustomElementPropType",166],[6,"CustomElementExtend",166],[5,"RootMetadata",166],[6,"AttributeSequenceValue",166],[5,"SpreadAttributeMetadata",166],[5,"AnimateDirective",166],[5,"BindDirective",166],[5,"BindDirectiveMetadata",166],[5,"ClassDirective",166],[5,"ClassDirectiveMetadata",166],[5,"LetDirective",166],[5,"OnDirective",166],[5,"StyleDirective",166],[5,"StyleDirectiveMetadata",166],[5,"TransitionDirective",166],[5,"UseDirective",166],[10,"Serializer",1313],[10,"Visit",1103],[10,"VisitMut",1103]],"b":[]}],\
["ssc_codegen",{"doc":"SSC Codegen","t":"FFFKNNNNNNNNNNOONNNNNNNNNNNNNNNOONNNNNNNNNN","n":["Codegen","CodegenOptions","CodegenReturn","Gen","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","enable_source_map","enable_typescript","fmt","from","from","from","gen","gen","into","into","into","into_source_text","new","print","print_hard_space","print_str","print_str_with_indention","source_map","source_text","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"ssc_codegen"],[43,"ssc_ast::ast"],[44,"core::fmt"],[45,"core::fmt"],[46,"core::result"],[47,"core::any"]],"d":["","","","","","","","","","","","","","","Pass in the filename to enable source map support.","Enable TypeScript code generation.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Push a single character into the buffer","","Push a string into the buffer","","","","","","","","","","","","",""],"i":[0,0,0,0,3,1,4,3,1,4,1,4,4,4,4,4,4,3,1,4,8,8,3,1,4,1,1,1,1,1,1,3,3,4,3,1,4,3,1,4,3,1,4],"f":"````{ce{}{}}00000{{bd}f}{hh}{{ce}j{}{}}{{}h}``{{hl}n}{cc{}}00{{A`b}j}0777{bAb}{{AdAdh}b}{{bAf}j}{bj}{{b{Ah{Af}}}j}0``<{c{{Aj{e}}}{}{}}00000{cAl{}}00","c":[],"p":[[5,"Codegen",0],[5,"Root",43],[5,"CodegenReturn",0],[5,"CodegenOptions",0],[1,"unit"],[5,"Formatter",44],[8,"Result",44],[10,"Gen",0],[5,"String",45],[1,"str"],[1,"u8"],[1,"slice"],[6,"Result",46],[5,"TypeId",47]],"b":[]}],\
["ssc_css_ast",{"doc":"SSC CSS AST","t":"FGGPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPFIPPEENOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFPPGFPFGPFPPFGFFPFPPPFPPPFPPFPFPPFPFPFFGFFGFPPFPPFPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOKKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["AstBuilder","AstKind","AstType","AtRule","AtRule","AttributeSelector","AttributeSelector","ClassSelector","ClassSelector","Combinator","Combinator","Comment","ComplexSelector","ComplexSelector","Declaration","Declaration","IdSelector","IdSelector","NestingSelector","NestingSelector","NthSelector","NthSelector","PercentageSelector","PercentageSelector","PseudoClassSelector","PseudoClassSelector","PseudoElementSelector","PseudoElementSelector","RelativeSelector","RelativeSelector","StyleRule","StyleRule","StyleSheet","StyleSheet","Trivias","TriviasMap","TypeSelector","TypeSelector","Visit","VisitMut","alloc","allocator","ast","at_rule","attribute_selector","block","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_selector","clone","clone","clone","clone_into","clone_into","clone_into","combinator","comments","comments_range","complex_selector","copy","debug_name","declaration","default","end","fmt","fmt","fmt","fmt","from","from","from","from","from","has_comments_between","id_selector","into","into","into","into","into","irregular_whitespaces","nesting_selector","new","new","new","new_atom","new_str","new_vec","new_vec_from_iter","new_vec_single","new_vec_with_capacity","nth_selector","percentage_selector","pseudo_class_selector","pseudo_element_selector","relative_selector","selector_list","span","style_rule","stylesheet","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_selector","visit","AtRule","AtRule","AtRule","AttributeMatcher","AttributeSelector","AttributeSelector","Block","BlockChild","Child","ClassSelector","ClassSelector","Column","Combinator","CombinatorKind","ComplexSelector","ComplexSelectorMetadata","DashMatch","Declaration","Declaration","Descendant","Equal","IdSelector","IdSelector","Includes","LaterSibling","NestingSelector","NestingSelector","NextSibling","NthSelector","NthSelector","PercentageSelector","PercentageSelector","Prefix","PseudoClassSelector","PseudoClassSelector","PseudoElementSelector","PseudoElementSelector","RelativeSelector","RelativeSelectorMetadata","Rule","RuleMetadata","SelectorList","SimpleSelector","StyleRule","StyleRule","StyleRule","StyleSheet","Substring","Suffix","TypeSelector","TypeSelector","args","block","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","children","children","children","combinator","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_local_selectors","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_global","is_global_block","is_host","kind","matcher","metadata","metadata","metadata","name","name","name","name","name","name","name","prelude","prelude","property","root","scoped","selectors","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","used","value","value","value","value","Visit","VisitMut","alloc","alloc","enter_node","enter_node","enter_node","enter_node","leave_node","leave_node","leave_node","leave_node","visit_at_rule","visit_at_rule","visit_at_rule","visit_at_rule","visit_attribute_selector","visit_attribute_selector","visit_attribute_selector","visit_attribute_selector","visit_block","visit_block","visit_block","visit_block","visit_block_child","visit_block_child","visit_block_child","visit_block_child","visit_class_selector","visit_class_selector","visit_class_selector","visit_class_selector","visit_combinator","visit_combinator","visit_combinator","visit_combinator","visit_complex_selector","visit_complex_selector","visit_complex_selector","visit_complex_selector","visit_declaration","visit_declaration","visit_declaration","visit_declaration","visit_id_selector","visit_id_selector","visit_id_selector","visit_id_selector","visit_nesting_selector","visit_nesting_selector","visit_nesting_selector","visit_nesting_selector","visit_nth_selector","visit_nth_selector","visit_nth_selector","visit_nth_selector","visit_percentage_selector","visit_percentage_selector","visit_percentage_selector","visit_percentage_selector","visit_pseudo_class_selector","visit_pseudo_class_selector","visit_pseudo_class_selector","visit_pseudo_class_selector","visit_pseudo_element_selector","visit_pseudo_element_selector","visit_pseudo_element_selector","visit_pseudo_element_selector","visit_relative_selector","visit_relative_selector","visit_relative_selector","visit_relative_selector","visit_rule","visit_rule","visit_rule","visit_rule","visit_rules","visit_rules","visit_rules","visit_rules","visit_selector_list","visit_selector_list","visit_selector_list","visit_selector_list","visit_simple_selector","visit_simple_selector","visit_simple_selector","visit_simple_selector","visit_style_rule","visit_style_rule","visit_style_rule","visit_style_rule","visit_stylesheet","visit_stylesheet","visit_stylesheet","visit_stylesheet","visit_type_selector","visit_type_selector","visit_type_selector","visit_type_selector","walk","walk_mut","walk_at_rule","walk_attribute_selector","walk_block","walk_block_child","walk_class_selector","walk_combinator","walk_complex_selector","walk_declaration","walk_id_selector","walk_nesting_selector","walk_nth_selector","walk_percentage_selector","walk_pseudo_class_selector","walk_pseudo_element_selector","walk_relative_selector","walk_rule","walk_rules","walk_selector_list","walk_simple_selector","walk_style_rule","walk_stylesheet","walk_type_selector","walk_at_rule_mut","walk_attribute_selector_mut","walk_block_child_mut","walk_block_mut","walk_class_selector_mut","walk_combinator_mut","walk_complex_selector_mut","walk_declaration_mut","walk_id_selector_mut","walk_nesting_selector_mut","walk_nth_selector_mut","walk_percentage_selector_mut","walk_pseudo_class_selector_mut","walk_pseudo_element_selector_mut","walk_relative_selector_mut","walk_rule_mut","walk_rules_mut","walk_selector_list_mut","walk_simple_selector_mut","walk_style_rule_mut","walk_stylesheet_mut","walk_type_selector_mut"],"q":[[0,"ssc_css_ast"],[128,"ssc_css_ast::ast"],[468,"ssc_css_ast::visit"],[570,"ssc_css_ast::visit::walk"],[592,"ssc_css_ast::visit::walk_mut"],[614,"oxc_allocator::arena"],[615,"oxc_span::span"],[616,"oxc_span::atom"],[617,"core::option"],[618,"oxc_allocator::arena"],[619,"alloc::collections::btree::map"],[620,"core::ops::range"],[621,"core::fmt"],[622,"core::fmt"],[623,"oxc_allocator"],[624,"core::iter::traits::collect"],[625,"core::result"],[626,"core::any"],[627,"serde::ser"]],"d":["","Untyped AST Node Kind","","","","","","","","","","Comment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the AST kind name with minimal details. Particularly …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>|=</code>","","","","<code>=</code>","","","<code>*=</code>","","","","","","","","","<code>^=</code>","","","","","","","","","","","","","","","<code>~=</code>","<code>$=</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntax tree traversal","Syntax tree traversal to mutate an exclusive borrow of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,12,13,12,13,12,13,12,13,0,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,0,0,12,13,0,0,1,1,0,1,1,1,1,12,13,14,18,1,12,13,14,18,1,12,13,14,12,13,14,1,18,18,1,1,13,1,18,14,12,13,14,18,1,12,13,14,18,18,1,1,12,13,14,18,18,1,1,14,18,1,1,1,1,1,1,1,1,1,1,1,1,13,1,1,12,13,14,1,12,13,14,18,1,12,13,14,18,1,12,13,14,18,1,0,0,38,10,0,0,9,0,0,16,0,9,16,0,0,0,0,8,0,10,16,8,0,9,8,16,0,9,16,0,9,0,9,8,0,9,0,9,0,0,0,0,0,0,0,38,10,0,8,8,0,9,49,7,37,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,36,25,5,24,16,47,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,42,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,53,42,53,17,47,37,25,24,7,44,45,46,47,48,49,7,37,27,53,53,24,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,7,37,36,25,24,44,45,46,47,48,49,50,51,52,17,5,27,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,39,38,7,37,42,36,25,43,24,44,45,46,47,8,48,49,50,51,52,9,53,17,16,5,10,27,43,47,50,51,27,0,0,55,55,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,55,55,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"````````````````````````````````````````{{bc}{{d{c}}}{}}``{{bfhh{l{j}}}n}{{bfh{l{A`}}{l{h}}{l{h}}}Ab}{{bf{Af{Ad}}}j}{ce{}{}}000000000{{bfh}Ab}{AhAh}{AjAj}{AlAl}{{ce}An{}{}}00{{bfB`}Bb}{Bd{{`{{Bh{}{{Bf{f}}}}}}}}{{Bdc}{{Bl{BjAl}}}{{Bn{Bj}}}}{{bf{Af{C`}}}Cb}{{bc}c{}}{AjCd}{{bfhh}Cf}{{}Bd}`{{AhCh}Cj}{{AjCh}Cj}{{AlCh}Cj}{{BdCh}Cj}{cc{}}0000{{Bdf}Cl}{{bfh}Ab}{ce{}{}}0000{Bd{{Cn{f}}}}{{bf}Ab}{D`b}{BjAl}{{Db{Cn{f}}}Bd}{{bCd}h}{{bCd}Cd}{b{{Af{c}}}{}}{{be}{{Af{c}}}{}{{Dd{}{{Bf{c}}}}}}{{bc}{{Af{c}}}{}}{{bDf}{{Af{c}}}{}}<<{{bfh{l{Dh}}}Ab}={{bf{l{Bb}}{Af{Ab}}}C`}{{bf{Af{Cb}}}Dh}{Ajf}{{bfDhj}Dj}{{bf{Af{Dl}}}Dn}{ce{}{}}00{c{{E`{e}}}{}{}}000000000{cEb{}}0000{{bfh}Ab}```````````````````````````````````````````````````````3333333333333333333333333333333333333333333333333333`````{{B`B`}Cl}`{{DnCh}Cj}{{DlCh}Cj}{{nCh}Cj}{{DjCh}Cj}{{EdCh}Cj}{{DhCh}Cj}{{CbCh}Cj}{{EfCh}Cj}{{C`Ch}Cj}{{EhCh}Cj}{{EjCh}Cj}{{ElCh}Cj}{{EnCh}Cj}{{A`Ch}Cj}{{F`Ch}Cj}{{FbCh}Cj}{{FdCh}Cj}{{FfCh}Cj}{{FhCh}Cj}{{AbCh}Cj}{{FjCh}Cj}{{BbCh}Cj}{{B`Ch}Cj}{{jCh}Cj}{{AdCh}Cj}{{CfCh}Cj}{cc{}}0000000000000000000000000`{ce{}{}}0000000000000000000000000`````````````````````{{Dnc}E`Fl}{{Dlc}E`Fl}{{nc}E`Fl}{{Djc}E`Fl}{{Edc}E`Fl}{{Dhc}E`Fl}{{Cbc}E`Fl}{{Efc}E`Fl}{{C`c}E`Fl}{{Ehc}E`Fl}{{Ejc}E`Fl}{{Elc}E`Fl}{{Enc}E`Fl}{{A`c}E`Fl}{{F`c}E`Fl}{{Fbc}E`Fl}{{Fdc}E`Fl}{{Ffc}E`Fl}{{Fhc}E`Fl}{{Abc}E`Fl}{{Fjc}E`Fl}{{Bbc}E`Fl}{{B`c}E`Fl}{{jc}E`Fl}{{Adc}E`Fl}{{Cfc}E`Fl}``````````````````{c{{E`{e}}}{}{}}000000000000000000000000000000000000000000000000000{cEb{}}0000000000000000000000000```````{{Fnc}c{}}0{{FnAj}An}0{{G`Ah}An}01100{{Fnn}An}0{{G`n}An}0{{FnEn}An}0{{G`En}An}0{{Fnj}An}0{{G`j}An}0{{FnAd}An}0{{G`Ad}An}0{{FnEl}An}0{{G`El}An}0{{FnBb}An}0{{G`Bb}An}0{{FnCb}An}0{{G`Cb}An}0{{FnCf}An}0{{G`Cf}An}0{{FnEj}An}0{{G`Ej}An}0{{FnFh}An}0{{G`Fh}An}0{{FnFf}An}0{{G`Ff}An}0{{FnFd}An}0{{G`Fd}An}0{{FnFb}An}0{{G`Fb}An}0{{FnF`}An}0{{G`F`}An}0{{FnC`}An}0{{G`C`}An}0{{FnDl}An}0{{G`Dl}An}0{{Fn{Af{Dl}}}An}0{{G`{Af{Dl}}}An}0{{FnDh}An}0{{G`Dh}An}0{{FnAb}An}0{{G`Ab}An}0{{FnDj}An}0{{G`Dj}An}0{{FnDn}An}0{{G`Dn}An}0{{FnEh}An}0{{G`Eh}An}0``{{cn}AnFn}{{cEn}AnFn}{{cj}AnFn}{{cAd}AnFn}{{cEl}AnFn}{{cBb}AnFn}{{cCb}AnFn}{{cCf}AnFn}{{cEj}AnFn}{{cFh}AnFn}{{cFf}AnFn}{{cFd}AnFn}{{cFb}AnFn}{{cF`}AnFn}{{cC`}AnFn}{{cDl}AnFn}{{c{Af{Dl}}}AnFn}{{cDh}AnFn}{{cAb}AnFn}{{cDj}AnFn}{{cDn}AnFn}{{cEh}AnFn}{{cn}AnG`}{{cEn}AnG`}{{cAd}AnG`}{{cj}AnG`}{{cEl}AnG`}{{cBb}AnG`}{{cCb}AnG`}{{cCf}AnG`}{{cEj}AnG`}{{cFh}AnG`}{{cFf}AnG`}{{cFd}AnG`}{{cFb}AnG`}{{cF`}AnG`}{{cC`}AnG`}{{cDl}AnG`}{{c{Af{Dl}}}AnG`}{{cDh}AnG`}{{cAb}AnG`}{{cDj}AnG`}{{cDn}AnG`}{{cEh}AnG`}","c":[],"p":[[5,"AstBuilder",0],[5,"Box",614],[5,"Span",615],[5,"Atom",616],[5,"Block",128],[6,"Option",617],[5,"AtRule",128],[6,"AttributeMatcher",128],[6,"SimpleSelector",128],[6,"BlockChild",128],[5,"Vec",614],[6,"AstType",0],[6,"AstKind",0],[5,"Comment",0],[1,"unit"],[6,"CombinatorKind",128],[5,"Combinator",128],[5,"Trivias",0],[17,"Item"],[10,"Iterator",618],[1,"u32"],[5,"Range",619],[10,"RangeBounds",620],[5,"RelativeSelector",128],[5,"ComplexSelector",128],[1,"str"],[5,"Declaration",128],[5,"Formatter",621],[8,"Result",621],[1,"bool"],[5,"Vec",622],[5,"Allocator",623],[8,"TriviasMap",0],[10,"IntoIterator",624],[1,"usize"],[5,"SelectorList",128],[5,"StyleRule",128],[6,"Rule",128],[5,"StyleSheet",128],[6,"Result",625],[5,"TypeId",626],[5,"RuleMetadata",128],[5,"ComplexSelectorMetadata",128],[5,"TypeSelector",128],[5,"IdSelector",128],[5,"ClassSelector",128],[5,"AttributeSelector",128],[5,"PseudoElementSelector",128],[5,"PseudoClassSelector",128],[5,"PercentageSelector",128],[5,"NthSelector",128],[5,"NestingSelector",128],[5,"RelativeSelectorMetadata",128],[10,"Serializer",627],[10,"Visit",468],[10,"VisitMut",468]],"b":[]}],\
["ssc_css_codegen",{"doc":"SSC CSS Codegen","t":"FFFKNNNNNNNNNNONNNNNNNNNNNNNNOONNNNNNNNNN","n":["Codegen","CodegenOptions","CodegenReturn","Gen","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","enable_source_map","fmt","from","from","from","gen","gen","into","into","into","into_source_text","new","print","print_hard_space","print_str","source_map","source_text","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"ssc_css_codegen"],[41,"ssc_css_ast::ast"],[42,"core::fmt"],[43,"core::fmt"],[44,"core::result"],[45,"core::any"]],"d":["","","","","","","","","","","","","","","Pass in the filename to enable source map support.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Push a single character into the buffer","","Push a string into the buffer","","","","","","","","","","","",""],"i":[0,0,0,0,3,1,4,3,1,4,1,4,4,4,4,4,3,1,4,8,8,3,1,4,1,1,1,1,1,3,3,4,3,1,4,3,1,4,3,1,4],"f":"````{ce{}{}}00000{{bd}f}{hh}{{ce}j{}{}}{{}h}`{{hl}n}{cc{}}00{{A`b}j}0777{bAb}{{AdAdh}b}{{bAf}j}{bj}{{b{Ah{Af}}}j}``<{c{{Aj{e}}}{}{}}00000{cAl{}}00","c":[],"p":[[5,"Codegen",0],[5,"StyleSheet",41],[5,"CodegenReturn",0],[5,"CodegenOptions",0],[1,"unit"],[5,"Formatter",42],[8,"Result",42],[10,"Gen",0],[5,"String",43],[1,"str"],[1,"u8"],[1,"slice"],[6,"Result",44],[5,"TypeId",45]],"b":[]}],\
["ssc_css_parser",{"doc":"SSC CSS Parser","t":"PPPPPPPPPPPPPPPGPPPPSPPPPPFFPPPPPPPPPPPPPPPPPNNNNNNNNNNNNONNNNNNNNNNNONNONNNNONNNNNNNNN","n":["Amp","At","Backtick","Bang","Caret","Colon","Colon2","Comma","Dollar","Dot","Eof","Eq","Even","Hash","Ident","Kind","LAngle","LBrack","LCurly","LParen","MAX_LEN","Minus","N","Number","Odd","Of","Parser","ParserReturn","Percent","Pipe","Pipe2","Plus","Question","RAngle","RBrack","RCurly","RParen","Semicolon","Skip","Slash","Star","Str","Tilde","Undetermined","Url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","errors","fmt","fmt","from","from","from","into","into","into","is_eof","match_keyword","new","panicked","parse","parse_from_position","stylesheet","to_compact_string","to_owned","to_str","to_string","trivias","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"ssc_css_parser"],[87,"core::fmt"],[88,"core::fmt"],[89,"compact_str"],[90,"alloc::string"],[91,"core::result"],[92,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Maximum length of source which can be parsed (in bytes). ~…","","","","","","Recursive Descent Parser","Return value of parser consisting of AST, errors and …","","","","","","","","","","","","","","String Type","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new parser","","Main entry point","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,8,1,9,8,1,1,1,1,1,1,1,9,1,1,9,8,1,9,8,1,1,1,8,9,8,8,9,1,1,1,1,9,9,8,1,9,8,1,9,8,1],"f":"`````````````````````````````````````````````{ce{}{}}00000{bb}{{ce}d{}{}}{{}b}{{bb}f}{{ce}f{}{}}0`{{bh}j}0{cc{}}00777{bf}{lb}{{nl}A`}`{A`Ab}{{A`Ad}Ab}`{cAf{}}={bl}{cAh{}}`{c{{Aj{e}}}{}{}}00000{cAl{}}00","c":[],"p":[[6,"Kind",0],[1,"unit"],[1,"bool"],[5,"Formatter",87],[8,"Result",87],[1,"str"],[5,"Allocator",88],[5,"Parser",0],[5,"ParserReturn",0],[1,"u32"],[5,"CompactString",89],[5,"String",90],[6,"Result",91],[5,"TypeId",92]],"b":[[58,"impl-Display-for-Kind"],[59,"impl-Debug-for-Kind"]]}],\
["ssc_css_transformer",{"doc":"CSS Transformer","t":"FNNNNNNNNNN","n":["Transformer","borrow","borrow_mut","build","from","into","new","try_from","try_into","type_id","visit_relative_selector"],"q":[[0,"ssc_css_transformer"],[11,"ssc_css_ast::ast"],[12,"core::result"],[13,"core::any"],[14,"ssc_css_ast::ast"]],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{{bd}f}{cc{}}2{hb}{c{{j{e}}}{}{}}0{cl{}}{{bn}f}","c":[],"p":[[5,"Transformer",0],[5,"StyleSheet",11],[1,"unit"],[1,"str"],[6,"Result",12],[5,"TypeId",13],[5,"RelativeSelector",11]],"b":[]}],\
["ssc_parser",{"doc":"SSC Parser","t":"PPPPPPPPPPPPPPPPPPPPPPPGPPPPSPPFFPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNONNNNNNNNNNNONONNNNONNNNNNNNN","n":["Amp","As","At","Await","Backtick","Bang","Caret","Catch","Colon","Comma","Const","Debug","Dot","Dot3","Each","Else","Eof","Eq","Hash","Html","Ident","If","Key","Kind","LAngle","LBrack","LCurly","LParen","MAX_LEN","Minus","Number","Parser","ParserReturn","Percent","Pipe","Plus","Question","RAngle","RBrack","RCurly","RParen","Render","Script","Semicolon","Skip","Slash","Snippet","Star","Str","Style","Text","Then","Tilde","Undetermined","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","errors","fmt","fmt","from","from","from","into","into","into","is_eof","match_keyword","new","panicked","parse","root","to_compact_string","to_owned","to_str","to_string","trivias","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"ssc_parser"],[95,"core::fmt"],[96,"core::fmt"],[97,"compact_str"],[98,"alloc::string"],[99,"core::result"],[100,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum length of source which can be parsed (in bytes). ~…","","","Recursive Descent Parser","Return value of parser consisting of AST, errors and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new parser","","Main entry point","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,8,1,9,8,1,1,1,1,1,1,1,9,1,1,9,8,1,9,8,1,1,1,8,9,8,9,1,1,1,1,9,9,8,1,9,8,1,9,8,1],"f":"``````````````````````````````````````````````````````{ce{}{}}00000{bb}{{ce}d{}{}}{{}b}{{bb}f}{{ce}f{}{}}0`{{bh}j}0{cc{}}00777{bf}{lb}{{nl}A`}`{A`Ab}`{cAd{}}<{bl}{cAf{}}`{c{{Ah{e}}}{}{}}00000{cAj{}}00","c":[],"p":[[6,"Kind",0],[1,"unit"],[1,"bool"],[5,"Formatter",95],[8,"Result",95],[1,"str"],[5,"Allocator",96],[5,"Parser",0],[5,"ParserReturn",0],[5,"CompactString",97],[5,"String",98],[6,"Result",99],[5,"TypeId",100]],"b":[[67,"impl-Debug-for-Kind"],[68,"impl-Display-for-Kind"]]}],\
["ssc_parser_napi",{"doc":"","t":"FFFNNNNNNOOOONONNNNNONNNNNOOOHHHONOONNNNNNNNNNNNNONN","n":["Comment","ParseResult","Root","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","comments","css","end","errors","fmt","fragment","from","from","from","from_napi_value","from_napi_value","instance","into","into","into","into_vec","into_vec","metadata","module","options","parse_async","parse_sync","parse_without_return","root","serialize","span","start","to_napi_value","to_napi_value","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","value","value_type","value_type"],"q":[[0,"ssc_parser_napi"],[52,"core::fmt"],[53,"core::fmt"],[54,"napi_sys::types"],[55,"napi_sys::types"],[56,"napi_sys::types"],[57,"napi::error"],[58,"serde::ser"],[59,"core::any"],[60,"napi::value_type"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Panics","Panics","Parse without returning anything. This is for benchmark …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,8,10,1,8,10,1,8,1,10,8,1,1,8,10,1,8,10,1,8,10,1,8,10,1,1,1,0,0,0,8,1,1,10,8,10,8,10,1,8,10,1,8,10,1,8,10,10,8,10],"f":"```{ce{}{}}00000````{{bd}{{j{fh}}}}`{cc{}}00{{ln}{{Ab{A`}}}}{{ln}{{Ab{Ad}}}}`444{{cAf}{{j{{Aj{Ah}}Al}}}{}}0```{AnA`}0{Anf}`{{bc}jB`}``{{lA`}{{Ab{n}}}}{{lAd}{{Ab{n}}}}{c{{j{e}}}{}{}}00000{cBb{}}00{{}Bd}0`{{}Bf}0","c":[],"p":[[5,"Root",0],[5,"Formatter",52],[1,"unit"],[5,"Error",52],[6,"Result",53],[8,"napi_env",54],[8,"napi_value",54],[5,"ParseResult",0],[8,"Result",55],[5,"Comment",0],[5,"napi_env__",54],[5,"napi_value__",54],[5,"Vec",56],[5,"Error",55],[5,"String",57],[10,"Serializer",58],[5,"TypeId",59],[1,"str"],[6,"ValueType",60]],"b":[]}],\
["ssc_parser_wasm",{"doc":"","t":"FFNNNNNNNNOONNNNNNNNNONHNNNONOONNNNNNNNN","n":["Diagnostic","ParseResult","borrow","borrow","borrow_mut","borrow_mut","default","default","describe","describe_vector","end","errors","fmt","from","from","from_abi","into","into","into_abi","is_none","long_ref_from_abi","message","none","parse_sync","ref_from_abi","ref_mut_from_abi","return_abi","root","serialize","severity","start","try_from","try_from","try_from_js_value","try_into","try_into","type_id","type_id","vector_from_abi","vector_into_abi"],"q":[[0,"ssc_parser_wasm"],[40,"core::fmt"],[41,"core::fmt"],[42,"serde_wasm_bindgen::error"],[43,"core::result"],[44,"serde::ser"],[45,"wasm_bindgen"],[46,"core::any"],[47,"alloc::boxed"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Errors","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,1,2,1,2,1,2,1,1,2,1,1,1,2,1,0,1,1,1,1,2,2,2,1,2,1,1,2,1,2,1,1],"f":"``{ce{}{}}000{{}b}{{}d}{{}f}0``{{dh}j}{cc{}}0{lb}66{bl}{cn{}}8`{{}c{}}{A`{{Ad{bAb}}}}::{c{}{}}`{{dc}AdAf}``{c{{Ad{e}}}{}{}}0{Ah{{Ad{bc}}}{}}11{cAj{}}0{c{{An{{Al{b}}}}}{}}{{{An{{Al{b}}}}}c{}}","c":[],"p":[[5,"ParseResult",0],[5,"Diagnostic",0],[1,"unit"],[5,"Formatter",40],[8,"Result",40],[1,"u32"],[1,"bool"],[5,"String",41],[5,"Error",42],[6,"Result",43],[10,"Serializer",44],[5,"JsValue",45],[5,"TypeId",46],[1,"slice"],[5,"Box",47]],"b":[]}],\
["ssc_transformer",{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":"","c":[],"p":[],"b":[]}],\
["ssc_wasm",{"doc":"","t":"FFFONNNNNNNNNNONNNNNOONNNNNNNNNNNONNONNNNNNNNNNNONOONNNNNNNNNNNNONN","n":["Comment","Diagnostic","Ssc","ast","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","codegen_text","default","default","describe","describe","describe_vector","end","end","from","from","from","from_abi","get_comments","get_diagnostics","into","into","into","into_abi","into_abi","ir","is_none","long_ref_from_abi","message","new","none","none","ref_from_abi","ref_mut_from_abi","return_abi","return_abi","run","serialize","serialize","set_source_text","severity","source_text","start","start","to_owned","to_owned","try_from","try_from","try_from","try_from_js_value","try_into","try_into","try_into","type_id","type_id","type_id","value","vector_from_abi","vector_into_abi"],"q":[[0,"ssc_wasm"],[67,"wasm_bindgen"],[68,"alloc::vec"],[69,"serde_wasm_bindgen::error"],[70,"core::result"],[71,"serde::ser"],[72,"alloc::string"],[73,"core::any"],[74,"alloc::boxed"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns comments","Returns Array of String","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Errors","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,4,4,1,2,4,1,2,1,2,1,2,4,4,2,4,1,4,1,2,4,1,2,4,4,4,4,1,2,4,1,4,4,4,2,4,4,1,4,4,4,1,4,1,2,4,2,4,1,2,1,2,4,1,2,4,4,1,2,4,1,2,1,4,4],"f":"````{ce{}{}}00000{bb}{dd}{{ce}f{}{}}0`{{}h}{{}d}{{}f}00``{cc{}}00{jh}{h{{Ab{{n{l}}A`}}}}0999{hj}{bc{}}`{cAd{}}<`8{{}c{}}0=={c{}{}}0`{{bc}AbAf}{{dc}AbAf}{{hAh}f}`{hAh}``{ce{}{}}0{c{{Ab{e}}}{}{}}00{l{{Ab{hc}}}{}}111{cAj{}}00`{c{{An{{Al{h}}}}}{}}{{{An{{Al{h}}}}}c{}}","c":[],"p":[[5,"Comment",0],[5,"Diagnostic",0],[1,"unit"],[5,"Ssc",0],[1,"u32"],[5,"JsValue",67],[5,"Vec",68],[5,"Error",69],[6,"Result",70],[1,"bool"],[10,"Serializer",71],[5,"String",72],[5,"TypeId",73],[1,"slice"],[5,"Box",74]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
